{
    "nodes": [
        {
            "id": "out",
            "args": [
                "value"
            ],
            "script": "return value;"
        },
        {
            "id": "get_inputs",
            "value": "value"
        },
        {
            "id": "get_script",
            "value": "value"
        },
        {
            "id": "lvfabiz9b",
            "name": "css",
            "args": [
                "el",
                "styles"
            ],
            "script": "el.innerHTML = styles;\n\nreturn styles;"
        },
        {
            "id": "2jiztgmvr",
            "name": "css_el",
            "args": [
                "get_el",
                "create_el"
            ],
            "type": "switch"
        },
        {
            "id": "vpq73g9qg",
            "name": "get_el",
            "script": "return document.querySelector('.css-styles')",
            "args": []
        },
        {
            "id": "zruw6k6l9",
            "name": "el classname",
            "args": [
                "el"
            ],
            "script": "el.className = \"css-styles\"; document.body.appendChild(el); return el;"
        },
        {
            "id": "x8tdpkazf",
            "name": "css el inputs",
            "script": "return document.querySelector(\".css-styles\") ? [\"get_el\"] : [\"create_el\"];",
            "args": []
        },
        {
            "id": "dfbmreaek",
            "name": "create el",
            "script": "return document.createElement(\"style\");",
            "args": []
        },
        {
            "id": "filter",
            "nodes": [
                {
                    "id": "in"
                },
                {
                    "id": "out",
                    "args": [
                        "keep",
                        "data"
                    ],
                    "script": "return keep ? [data] : []"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out",
                    "order": 1
                },
                {
                    "from": "in",
                    "to": "out",
                    "as": "data",
                    "order": 0
                }
            ]
        },
        {
            "id": "delete",
            "nodes": [
                {
                    "id": "in"
                },
                {
                    "id": "out",
                    "args": [
                        "data",
                        "path"
                    ],
                    "script": "const new_data = Object.assign({}, data); delete new_data[path]; return new_data;"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out",
                    "order": 1
                },
                {
                    "from": "in",
                    "to": "out",
                    "as": "data",
                    "order": 0
                }
            ],
            "value": "value"
        },
        {
            "id": "switch",
            "nodes": [
                {
                    "id": "in"
                },
                {
                    "id": "out",
                    "args": [
                        "data",
                        "input"
                    ],
                    "script": "return data[Object.getOwnPropertyNames(data)[0]];"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out",
                    "as": "data"
                }
            ]
        },
        {
            "id": "trigger",
            "nodes": [
                {
                    "id": "in"
                },
                {
                    "id": "trigger",
                    "args": [
                        "trigger"
                    ],
                    "script": "return trigger ? ['in'] : []"
                },
                {
                    "id": "out",
                    "args": [
                        "data"
                    ],
                    "script": "return data?.data ?? []"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out",
                    "as": "data"
                },
                {
                    "from": "in",
                    "to": "trigger"
                },
                {
                    "from": "trigger",
                    "to": "out",
                    "type": "inputs"
                }
            ]
        },
        {
            "id": "execute_graph",
            "nodes": [
                {
                    "id": "in",
                    "value": null
                },
                {
                    "id": "out",
                    "args": [
                        "in_node",
                        "out_node",
                        "graph"
                    ],
                    "script": "return (...args) => (lib.no.executeGraph({state: new Map([[in_node, args]]), graph, out: out_node }))"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out"
                }
            ]
        },
        {
            "id": "vr865hcv0",
            "name": "body"
        },
        {
            "id": "kvq1q0k30",
            "value": "#ccc"
        },
        {
            "id": "qpao2izqz",
            "name": "circle"
        },
        {
            "id": "u7sy8fwro",
            "value": "black"
        },
        {
            "id": "56j09nio2",
            "value": 1
        },
        {
            "id": "1t96plqko",
            "name": "text"
        },
        {
            "id": "bacr589n7",
            "type": "css",
            "name": "stringify_css"
        },
        {
            "id": "3xppcpetm",
            "args": [],
            "value": 1
        },
        {
            "id": "6ffivp2aw",
            "args": [],
            "value": 0
        },
        {
            "id": "4ol7uqdfr",
            "args": [],
            "value": "2s blink infinite"
        },
        {
            "id": "29hvv137x",
            "args": [],
            "value": "opacity"
        },
        {
            "id": "w62vgl3ln",
            "args": [],
            "value": "consolas"
        },
        {
            "id": "7xg2ng5r0",
            "type": "two_value_anim",
            "name": "blink anim"
        },
        {
            "id": "in",
            "args": [],
            "name": "in"
        },
        {
            "id": "c6h6qfqbw",
            "args": [
                "increase_decrease"
            ],
            "name": "key_listener",
            "script": "return increase_decrease ?? 'no key listener events';"
        },
        {
            "id": "ajj5t166a",
            "type": "set",
            "name": "set_value_increase_decrease"
        },
        {
            "id": "set",
            "args": [],
            "name": "set",
            "script": "return lib._.set(target, path, value);"
        },
        {
            "id": "r8cqojmo1",
            "args": [],
            "script": "return typeof start_value !== 'number' ? start_value : key === 'i' ? start_value + 1 : key === 'd' ? start_value - 1 : start_value;",
            "name": "modify_value"
        },
        {
            "id": "fj2x64arr",
            "args": [],
            "name": "key_listener_inputs",
            "script": "return typeof value === 'number' ? ['increase_decrease'] : []"
        },
        {
            "id": "qtb69pl8t",
            "args": [],
            "type": "get",
            "name": "get_value"
        },
        {
            "id": "mdwg7wfgu",
            "args": [],
            "value": "value"
        },
        {
            "id": "jtbamz3os",
            "type": "get_selected_node",
            "name": "in_selected_node"
        },
        {
            "id": "two_value_anim",
            "name": "two_value_anim",
            "nodes": [
                {
                    "id": "out",
                    "args": [
                        "attr",
                        "to",
                        "from"
                    ],
                    "name": "two_value_anim/out",
                    "script": "return {to: {[attr]: to}, from: {[attr]: from}};"
                },
                {
                    "id": "in",
                    "args": [],
                    "name": "two_value_anim/in"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out"
                }
            ]
        },
        {
            "id": "css",
            "name": "css",
            "nodes": [
                {
                    "id": "out",
                    "name": "css/out",
                    "script": "return rules?.join(\"\\n\");",
                    "args": [
                        "rules"
                    ]
                },
                {
                    "id": "mec78sn2n",
                    "name": "compile",
                    "args": [
                        "init",
                        "attrs",
                        "end",
                        "keyframes"
                    ],
                    "script": "return [init].concat(attrs ?? []).concat(keyframes ?? []).concat([end])"
                },
                {
                    "id": "2ll8r3sx5",
                    "name": "init",
                    "args": [
                        "entry"
                    ],
                    "script": "return entry[0] + \" {\""
                },
                {
                    "id": "mrs40dwx8",
                    "value": "}"
                },
                {
                    "id": "h28e9j2fo",
                    "name": "attrs",
                    "args": [
                        "entry"
                    ],
                    "script": "return entry && entry.length > 0 ? [Object.entries(entry[1]).map(([k, v]) => `${k}: ${v};`)] : [];\n\n//return JSON.stringify(entry[1]);\n"
                },
                {
                    "id": "i6kzydhrf",
                    "args": [
                        "entry"
                    ],
                    "name": "attrs_keyframes",
                    "script": "return entry ? Object.entries(entry).map(([k,v]) => k + \" {\" + Object.entries(v).map(([k,v]) => `${k}: ${v}`) + \"}\" ).join(\"\\n\") + \"}\" : undefined"
                },
                {
                    "id": "ie18qgd52",
                    "name": "entries",
                    "script": "return Object.entries(input)",
                    "args": [
                        "input"
                    ]
                },
                {
                    "id": "0g05impwi",
                    "args": [
                        "entry"
                    ],
                    "name": "filter_non_keyframes",
                    "script": "return !entry ? [] : entry[0].startsWith(\"@keyframes\") ? [] : [entry];"
                },
                {
                    "id": "1axxnkooa",
                    "args": [
                        "entry"
                    ],
                    "name": "filter_keyframes",
                    "script": "return entry &&  entry[0].startsWith(\"@keyframes\") ? entry[1] : undefined;"
                },
                {
                    "id": "in",
                    "name": "css/in"
                }
            ],
            "edges": [
                {
                    "from": "mec78sn2n",
                    "to": "out",
                    "type": "concat",
                    "as": "rules"
                },
                {
                    "from": "2ll8r3sx5",
                    "to": "mec78sn2n",
                    "as": "init",
                    "name": "end"
                },
                {
                    "from": "mrs40dwx8",
                    "to": "mec78sn2n",
                    "as": "end"
                },
                {
                    "from": "h28e9j2fo",
                    "to": "mec78sn2n",
                    "as": "attrs"
                },
                {
                    "from": "i6kzydhrf",
                    "to": "mec78sn2n",
                    "as": "keyframes"
                },
                {
                    "from": "ie18qgd52",
                    "to": "2ll8r3sx5",
                    "as": "entry"
                },
                {
                    "from": "0g05impwi",
                    "to": "h28e9j2fo",
                    "as": "entry"
                },
                {
                    "from": "1axxnkooa",
                    "to": "i6kzydhrf",
                    "as": "entry"
                },
                {
                    "from": "in",
                    "to": "ie18qgd52",
                    "as": "input"
                },
                {
                    "from": "ie18qgd52",
                    "to": "0g05impwi",
                    "as": "entry"
                },
                {
                    "from": "ie18qgd52",
                    "to": "1axxnkooa",
                    "as": "entry"
                },
                {
                    "from": "in",
                    "to": "ie18qgd52",
                    "as": "input"
                },
                {
                    "from": "in",
                    "to": "ie18qgd52",
                    "as": "input"
                }
            ]
        },
        {
            "id": "default",
            "name": "default",
            "nodes": [
                {
                    "id": "out",
                    "args": [
                        "data",
                        "default_value"
                    ],
                    "script": "return data.length > 0 ? data : default_value"
                },
                {
                    "id": "in"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out"
                }
            ]
        },
        {
            "id": "get_selected_node",
            "name": "get_selected_node",
            "nodes": [
                {
                    "id": "out",
                    "args": [
                        "graph",
                        "selected"
                    ],
                    "name": "get_selected_node/out",
                    "script": "return graph?.nodes?.find(n => n.id === selected) ?? [];"
                },
                {
                    "id": "dh64fe0yi",
                    "args": [
                        "target"
                    ],
                    "name": "get_selected",
                    "script": "return target.selected[0]"
                },
                {
                    "id": "7y938lss2",
                    "args": [],
                    "type": "get",
                    "name": "get_display_graph"
                },
                {
                    "id": "scbdvvauy",
                    "args": [
                        "in_value"
                    ],
                    "script": "return in_value;",
                    "name": "in_value"
                },
                {
                    "id": "1xlhcil2e",
                    "args": [],
                    "value": "display_graph"
                },
                {
                    "id": "in",
                    "args": [],
                    "name": "get_selected_node/in"
                }
            ],
            "edges": [
                {
                    "from": "dh64fe0yi",
                    "to": "out",
                    "as": "selected"
                },
                {
                    "from": "7y938lss2",
                    "to": "out",
                    "as": "graph"
                },
                {
                    "from": "scbdvvauy",
                    "to": "dh64fe0yi",
                    "as": "target"
                },
                {
                    "from": "1xlhcil2e",
                    "to": "7y938lss2",
                    "as": "path"
                },
                {
                    "from": "scbdvvauy",
                    "to": "7y938lss2",
                    "as": "target"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                },
                {
                    "from": "in",
                    "to": "scbdvvauy",
                    "as": "in_value"
                }
            ]
        },
        {
            "id": "cv9akpm4i",
            "args": [],
            "value": 4
        },
        {
            "id": "get",
            "name": "get",
            "nodes": [
                {
                    "id": "out",
                    "args": [
                        "target",
                        "path",
                        "def"
                    ],
                    "script": "return [lib._.get(target, path) ?? def]"
                },
                {
                    "id": "in"
                },
                {
                    "id": "fill_default",
                    "args": [
                        "input"
                    ],
                    "script": "return input.default ?? null"
                }
            ],
            "edges": [
                {
                    "from": "in",
                    "to": "out"
                },
                {
                    "from": "fill_default",
                    "to": "out",
                    "as": "def"
                },
                {
                    "from": "in",
                    "to": "out"
                },
                {
                    "from": "fill_default",
                    "to": "out",
                    "as": "def"
                },
                {
                    "from": "in",
                    "to": "fill_default",
                    "as": "input"
                },
                {
                    "from": "in",
                    "to": "fill_default",
                    "as": "input"
                },
                {
                    "from": "in",
                    "to": "fill_default",
                    "as": "input"
                },
                {
                    "from": "in",
                    "to": "fill_default",
                    "as": "input"
                }
            ]
        },
        {
            "id": "8521eyel9",
            "type": "get_key",
            "name": "in_key"
        },
        {
            "id": "get_key",
            "name": "get_key",
            "nodes": [
                {
                    "id": "out",
                    "args": [],
                    "name": "get_key/out",
                    "type": "get"
                },
                {
                    "id": "icfpfcgc2",
                    "args": [],
                    "value": "key"
                },
                {
                    "id": "in",
                    "args": [],
                    "name": "get_key/in"
                }
            ],
            "edges": [
                {
                    "from": "icfpfcgc2",
                    "to": "out",
                    "as": "path"
                },
                {
                    "from": "in",
                    "to": "out",
                    "as": "target"
                }
            ]
        }
    ],
    "edges": [
        {
            "from": "lvfabiz9b",
            "to": "out",
            "as": "value_"
        },
        {
            "from": "2jiztgmvr",
            "to": "lvfabiz9b",
            "as": "el"
        },
        {
            "from": "vpq73g9qg",
            "to": "2jiztgmvr",
            "as": "get_el"
        },
        {
            "from": "zruw6k6l9",
            "to": "2jiztgmvr",
            "as": "create_el"
        },
        {
            "from": "x8tdpkazf",
            "to": "2jiztgmvr",
            "type": "inputs"
        },
        {
            "from": "dfbmreaek",
            "to": "zruw6k6l9",
            "as": "el"
        },
        {
            "from": "bacr589n7",
            "to": "lvfabiz9b",
            "as": "styles"
        },
        {
            "from": "vr865hcv0",
            "to": "bacr589n7",
            "as": "body",
            "name": "light-grey",
            "value": "#ccc"
        },
        {
            "from": "kvq1q0k30",
            "to": "vr865hcv0",
            "as": "background-color"
        },
        {
            "from": "qpao2izqz",
            "to": "bacr589n7",
            "as": "circle"
        },
        {
            "from": "u7sy8fwro",
            "to": "qpao2izqz",
            "as": "stroke"
        },
        {
            "from": "56j09nio2",
            "to": "qpao2izqz",
            "as": "stroke-width"
        },
        {
            "from": "1t96plqko",
            "to": "bacr589n7",
            "as": "text"
        },
        {
            "from": "4ol7uqdfr",
            "to": "qpao2izqz",
            "as": "animation_"
        },
        {
            "from": "6ffivp2aw",
            "to": "7xg2ng5r0",
            "as": "from"
        },
        {
            "from": "3xppcpetm",
            "to": "7xg2ng5r0",
            "as": "to"
        },
        {
            "from": "29hvv137x",
            "to": "7xg2ng5r0",
            "as": "attr"
        },
        {
            "from": "w62vgl3ln",
            "to": "1t96plqko",
            "as": "font-family"
        },
        {
            "from": "7xg2ng5r0",
            "to": "bacr589n7",
            "as": "@keyframes blink"
        },
        {
            "from": "jtbamz3os",
            "to": "ajj5t166a",
            "as": "target"
        },
        {
            "from": "fj2x64arr",
            "to": "c6h6qfqbw",
            "type": "inputs"
        },
        {
            "from": "jtbamz3os",
            "to": "qtb69pl8t",
            "as": "target"
        },
        {
            "from": "mdwg7wfgu",
            "to": "qtb69pl8t",
            "as": "path"
        },
        {
            "from": "qtb69pl8t",
            "to": "r8cqojmo1",
            "as": "start_value"
        },
        {
            "from": "8521eyel9",
            "to": "r8cqojmo1",
            "as": "key"
        },
        {
            "from": "mdwg7wfgu",
            "to": "ajj5t166a",
            "as": "path"
        },
        {
            "from": "qtb69pl8t",
            "to": "fj2x64arr",
            "as": "value"
        },
        {
            "from": "c6h6qfqbw",
            "to": "out",
            "as": "value_"
        },
        {
            "from": "ajj5t166a",
            "to": "c6h6qfqbw",
            "as": "increase_decrease"
        },
        {
            "from": "r8cqojmo1",
            "to": "ajj5t166a",
            "as": "value"
        },
        {
            "from": "in",
            "to": "jtbamz3os"
        },
        {
            "from": "cv9akpm4i",
            "to": "out"
        },
        {
            "from": "in",
            "to": "8521eyel9"
        }
    ]
}