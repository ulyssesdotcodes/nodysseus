@import 'material-icons/iconfont/outlined.css'


:root {
    --nodex: 0px;
    --nodey: 0px;
}

body {
  width: 100%;
  height: 100%;
  margin:0;
  font-family: consolas;
  color: white;
}

.hidden {
    visibility: hidden;
}

.collapsed {
    visibility: collapse;
}

.shown {
    visibility: visible;
}

.display-none {
    display: none;
}

#node-editor {
    position: relative;
    width: 100vw;
    height: 100vh;
    overflow: hidden;
    background: #101010;
}

#node-editor-editor {
    position: absolute;
    z-index: 4;
}

#node-editor-editor.hash-view {
    background-color: unset;
}

#node-editor-editor-panzoom {
    pointer-events: all;
}

svg {
    user-select: none;
}

.graph-ui {
    display: flex;
    position: absolute;
    right: 100px;
    top: 100px;
    flex-direction: row;
    gap: 8px;
}

.graph-ui ion-icon {
    cursor: pointer;
    width: 1.5em;
    height: 1.5em;
    color: #ccc;
}

.graph-ui ion-icon:hover {
    color: #fff;
}

.edit-value {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #00000011;
}

.edit-value .more {
    cursor: pointer;
}

.edit-value .centering {
    position: absolute;
    width: 32vw;
    display: flex;
    flex-direction: column;
}

.edit-value.none {
    left: -1000%;
}

.edit-value textarea {
    width: 32vw;
    font-size: (1em + 1vh);
    outline: none;
    resize: none;
}

.edit-value label {
    font-size: calc(1em + 2vh)
}

.edit-value textarea {
    height: 64em;
}

.edit-value.ref input {
    position: relative;
    left: 0;
}

.autocomplete-list {
  position: relative;
  z-index: 999;
  overflow-y: scroll;
  overflow-x: hidden;
  background: #000;
}

.autocomplete-item {
  line-height: 1.2em;
  padding: .2em;
  padding-left: .4em;
}

.autocomplete-item.selected {
  background: #333;
}

.autocomplete-group {
  line-height: 1.4em;
  padding: .2em;
  font-weight: bold;
  padding-top: .4em;
  border-top: 1px solid #111;
}

.edit-value .input {
    width: 256px;
}

.search-input.hidden {
    left: -1000px;
}

#arrow polyline {
    stroke: #fff;
    stroke-width: 2;
    fill: none
}

.node {
    cursor: pointer;
    transform: translate(var(--tx), var(--ty))
}

.node:hover {
    opacity: 1 !important;
}

.node .fill {
    opacity: 0;
}

@keyframes flash {
    0% {
      transform: scale(1);
    }

    2% { 
      transform: scale(1.15);
    }

    100% {
      transform: scale(1);
    }
}

.node .shape {
    fill: #66ccff;
    stroke: #66ccff;
    stroke-width: 2;
}

.node .shape.flash {
  animation: 1s ease-out infinite flash;
}

.node .shape.flash-transition, 
.node .shape.none.flash-transition, 
.node .shape.js-script.flash-transition {
  transform-origin: center;
}

.node:hover .shape {
    stroke-width: 2;
    stroke: #3fc
}

.node.selected .shape {
    fill: #fcc;
}

.node .shape.js-script {
    transform-box: fill-box;
    transform-origin: 50% 50%;
    transform: rotate(45deg);
    fill: none;
    stroke-width: 2px;
    stroke: #66ccff;
}

.node.selected .shape.js-script {
    stroke: #fcc;
}

.node .shape.none {
    stroke-width: 2px;
    stroke: #66ccff;
}

.node .shape.error {
    fill: #FF0000 !important;
}

.node.selected .shape.none {
    stroke: #fcc;
}

.distance-0 {
    opacity: 1;
}

.distance-1 {
    opacity: 0.85;
} 

.distance-2 {
    opacity: 0.666;
} 

.distance-3 {
    opacity: 0.333;
} 

.distance-far {
    opacity: 0.1;
}

#node-info-wrapper {
  position: absolute;
  left: var(--nodex);
  top: 0;
  bottom: 0;

  display: flex;
  flex-flow: column nowrap;
  pointer-events: none;
  max-width: 400px;
}

#node-info-wrapper .spacer {
    pointer-events: none;
}

#node-info-wrapper .spacer.before {
    flex-basis: var(--nodey);
    flex-shrink: 1;
}

.node-info {
    z-index: 10;
    border: 1px solid white;
    background: #111;
    padding: .4em;
    color: white;
    display: flex;
    gap: .6em;
    flex-direction: column;
    pointer-events: all;
    max-height: 100%;
    overflow: auto;
}

@media (max-width: 600px) {
  #node-info-wrapper {
    left: max(min(25vw, calc(var(--nodex) - 75vw)), 0vw);
    max-width: 75vw;
  }

    #node-info-wrapper:focus-within {
      width: calc(100vw - 2px - .8em);
      max-width: 100vw;
      height: calc(100vh - 2px - .8em);
      left: 0;
      right: 0;
    }

    #node-info-wrapper:focus-within {
        width: 100%;
    }

    #node-info-wrapper:focus-within .spacer {
        flex-basis: 0;
    }

    #node-info-wrapper:focus-within .node-info {
        flex-grow: 1;
    }

    #node-info-wrapper.initial-layout {
      visibility: hidden;
    }
}

.node-info .args {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
}

.node-info .args span.clickable {
    cursor: pointer;
    text-decoration: underline dotted;
}

.node-info .inputs {
    display: flex;
    flex-direction: column;
    gap: .4em;
}

.node-info .value-input {
    display: flex;
    flex-direction: row;
    gap: .5em;
}

.node-info .value-input label {
    flex-basis: 18em;
}

.node-info .value-input input {
    flex-grow: 1;
}

.node-info autocomplete-list {
  flex-grow: 1;
}

#node-editor-code-editor {
  display: none;
}

.js-script #node-editor-code-editor {
  display: block;
}

.buttons {
  flex-direction: column;
  line-height: 1.4;
}

.action {
  display: flex;
  cursor: pointer;
  flex-direction: row;
  gap: .4em;
  align-items: center;
}

.action span {
  text-decoration: underline dotted;
}

.action span.material-icons-outlined {
  text-decoration: none;
  font-size: 1em;
}

/* result props */
#node-editor-result {
    position: fixed;
    bottom: 32px;
    left: 32px;
    max-width: 33%;
    z-index: 6;
}

.result.error {
    color: red;
}

/* error window */
#node-editor-error {
    position: absolute;
    top: 0;
    left: 0;
    width: 50vw;
    height: 50vh;
}

#node-editor-error pre {
  display: flex;
  flex-direction: row;
  gap: .5em;
}

#node-editor-error .goto {
  position: relative;
  text-decoration: underline;
  cursor: pointer;
  z-index: 34;
}

text {
    user-select: none;
    fill: white;
}

.link.selected {
    stroke: red;
}

.link {
    stroke: #ccc;
}

svg.edge-info.selected rect {
    fill: red;
}

.insert-node {
  transform: translate(var(--tx), var(--ty))
}

.insert-node,
#dummy-add-node {
    cursor: pointer;
    stroke: #fff;
    stroke-width: 32;
    stroke-opacity: 1;
}

.insert-node .circle,
#dummy-add-node .circle {
    fill-opacity: 0.5;
}

.node text {
    filter: url(#flood-background)
}

.node text .primary {
    font-weight: bold;
}

.node text .node-name {
  font-size: calc(1em / var(--zoom-scale));
}

.node text .secondary {
    font-style: italic;
}

.node.selected text .secondary:hover,
.node.selected text .primary:hover {
    text-decoration: dashed underline;
}

.show-key {
    position: fixed;
    right: 100px;
    top: 100px;
    font-size: 2em;
    font-family: consolas;
}

.edge-info {
    filter: url("#flood-background");
    padding: 4px;
    cursor: pointer;
}

.edge-info.selected {
    filter: url("#selected-flood-background");
}

.error.main {
    position: absolute;
    top: 0;
    left: 0;
    width: 25vw;
    color: red;
    padding: 1em;
    height: 8em;
    z-index: 2;
}

.align-selected {
    left: var(--nodex);
    top: var(--nodey);
}

/* popover */
#node-editor-popover {
    position: fixed;
    width: 100vw;
    height: 100vh;
    z-index: 100;
    top: 0;
    left: 0;
    background: #000000EE;
}

.popover {
    position: absolute;
    z-index: 100;
    background: #000000EE;
}

/* search */

.actions {
    position: absolute;
    right: 2em;
    top: 2em;
    cursor: pointer;
    display: flex;
    gap: 1em;
    z-index: 6;
}

#graph-actions .graph-action {
    font-size: 2em;
    user-select: none;
}

a, a:visited {
  color: white;
}

.overlay {
  position: fixed;
  width: 100%;
  height: 100%;
  top: 0;
  z-index: 128;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

#help-window {
  position: fixed;
  background: #000000EE;
  padding: 2em;
  width: 50vw;
  box-sizing: border-box;
}

@media (max-width: 600px) {
    #help-window {
      width: 100vw;
    }
}
