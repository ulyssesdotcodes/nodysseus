:root {
    --nodex: 0px;
    --nodey: 0px;
}

.hidden {
    visibility: hidden;
}


#node-editor {
    position: relative;
    width: 100%;
    height: 100vh;
    color: white;
    font-family: consolas;
    overflow: hidden;
}

#node-editor-editor.hash-view {
    background-color: unset;
}

svg {
    user-select: none;
}

.graph-ui {
    display: flex;
    position: absolute;
    right: 100px;
    top: 100px;
    flex-direction: row;
    gap: 8px;
}

.graph-ui ion-icon {
    cursor: pointer;
    width: 1.5em;
    height: 1.5em;
    color: #ccc;
}

.graph-ui ion-icon:hover {
    color: #fff;
}

.edit-value {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #00000011;
}

.edit-value .more {
    cursor: pointer;
}

.edit-value .centering {
    position: absolute;
    width: 32vw;
    display: flex;
    flex-direction: column;
}

.edit-value.none {
    left: -1000%;
}

.edit-value textarea {
    width: 32vw;
    font-size: (1em + 1vh);
    outline: none;
    resize: none;
}

.edit-value label {
    font-size: calc(1em + 2vh)
}

.edit-value textarea {
    height: 64em;
}

.edit-value.ref input {
    position: relative;
    left: 0;
}

.edit-value .input {
    width: 256px;
}

.search-input.hidden {
    left: -1000px;
}

#arrow polyline {
    stroke: #fff;
    stroke-width: 2;
    fill: none
}

.node {
    cursor: pointer;
}

.node:hover {
    opacity: 1 !important;
}

.node .fill {
    opacity: 0;
}

.node .shape {
    animation_: 2s blink infinite;
    fill: #66ccff;
}

.node:hover .shape {
    stroke-width: 2;
    stroke: #3fc
}

.node.selected .shape {
    fill: #fcc;
}

.node .shape.script {
    transform-box: fill-box;
    transform-origin: 50% 50%;
    transform: rotate(45deg);
    fill: none;
    stroke-width: 2px;
    stroke: #66ccff;
}

.node.selected .shape.script {
    stroke: #fcc;
}

.node .shape.none {
    stroke-width: 2px;
    stroke: #66ccff;
}

.node .shape.error {
    fill: #FF0000 !important;
}

.node.selected .shape.none {
    stroke: #fcc;
}

.distance-1 {
    opacity: 0.85;
} 

.distance-2 {
    opacity: 0.666;
} 

.distance-3 {
    opacity: 0.333;
} 

.distance-far {
    opacity: 0.1;
}

.node-info-wrapper {
    position: absolute;
    left: var(--nodex);
    top: 0;
    bottom: 0;

    display: flex;
    flex-flow: column nowrap;
    pointer-events: none;
    max-width: 256px;
}

.node-info-wrapper .spacer {
    pointer-events: none;
}

.node-info-wrapper .spacer.before {
    flex-basis: var(--nodey);
    flex-shrink: 1;
}

.node-info {
    z-index: 10;
    border: 1px solid white;
    background: #111;
    padding: .4em;
    color: white;
    display: flex;
    gap: .6em;
    flex-direction: column;
    pointer-events: all;
}

@media (max-width: 600px) {
    .node-info-wrapper:focus-within {
        width: calc(100vw - 2px - .8em);
        max-width: 100vw;
        height: calc(100vh - 2px - .8em);
        left: 0;
        right: 0;
    }

    .node-info-wrapper:focus-within {
        width: 100%;
    }

    .node-info-wrapper:focus-within .spacer {
        flex-basis: 0;
    }

    .node-info-wrapper:focus-within .node-info {
        flex-grow: 1;
    }
}

.node-info .args {
    display: flex;
    gap: 8px;
    flex-wrap: wrap;
}

.node-info .args span.clickable {
    cursor: pointer;
    text-decoration: underline dotted;
}

.node-info input {
    color: white;
    font-family: consolas;
    margin: 0;
    border: none;
    background-color: #000;
}

.node-info .inputs {
    display: flex;
    flex-direction: column;
    gap: .4em;
}

.node-info .value-input {
    display: flex;
    flex-direction: row;
    gap: .5em;
}

.node-info .value-input label {
    flex-basis: 18em;
}

.node-info .value-input input {
    flex-grow: 1;
}

.action {
    cursor: pointer;
    text-decoration: underline dotted;
}

/* result props */
#node-editor-result {
    position: fixed;
    bottom: 32px;
    left: 32px;
    max-width: 33%;
}

.result.error {
    color: red;
}

text {
    user-select: none;
    fill: white;
}

.link.selected {
    stroke: red;
}

.link {
    stroke: #ccc;
}

svg.edge-info.selected rect {
    fill: red;
}

.insert-node,
#dummy-add-node {
    cursor: pointer;
    stroke: #fff;
    stroke-width: 32;
    stroke-opacity: 1;
}

.insert-node .circle,
#dummy-add-node .circle {
    fill-opacity: 0.5;
}

.node text {
    filter: url(#flood-background)
}

.node text .primary {
    font-weight: bold;
}

.node text .secondary {
    font-style: italic;
}

.node.selected text .secondary:hover,
.node.selected text .primary:hover {
    text-decoration: dashed underline;
}

.show-key {
    position: fixed;
    right: 100px;
    top: 100px;
    font-size: 2em;
    font-family: consolas;
}

.edge-info {
    filter: url("#flood-background");
    padding: 4px;
    cursor: pointer;
}

.edge-info.selected {
    filter: url("#selected-flood-background");
}

.error.main {
    position: absolute;
    top: 0;
    left: 0;
    width: 25vw;
    color: red;
    padding: 1em;
    height: 8em;
    z-index: 100;
}

.align-selected {
    left: var(--nodex);
    top: var(--nodey);
}

/* popover */
#node-editor-popover {
    position: fixed;
    width: 100vw;
    height: 100vh;
    z-index: 100;
    top: 0;
    left: 0;
    background: #000000EE;
}

.popover {
    position: absolute;
    z-index: 100;
    background: #000000EE;
}