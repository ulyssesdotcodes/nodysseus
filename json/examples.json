[
    {
        "out": "main/out",
        "id": "simple",
        "nodes": [
            {"id": "state", "ref": "arg", "value": "state"},
            {"id": "state_log", "ref": "log"},
            {"id": "log_state", "ref": "runnable"},
            {"id": "main/out", "ref": "new_array"}
        ],
        "edges": [
            {"from": "state", "to": "state_log", "as": "value"},
            {"from": "state_log", "to": "log_state", "as": "fn"},
            {"from": "log_state", "to": "main/out", "as": "arg0"}
        ]
    },
    {"out":"main/out","id":"hydra","nodes":[{"id":"main/out","ref":"new_array","inputs":[{"from":"log_state","to":"main/out","as":"arg0"},{"from":"gjeyyc8/gjeyyc8","to":"main/out","as":"arg2"},{"from":"igndwq8","to":"main/out","as":"arg3"},{"from":"dsglk3g/dsglk3g","to":"main/out","as":"arg5"},{"from":"2jg5vn0/2jg5vn0","to":"main/out","as":"arg4"}]},{"id":"gsmms6f","inputs":[{"from":"bsg03ct","to":"gsmms6f","as":"fn"}],"ref":"runnable"},{"id":"odona6p","ref":"arg","value":"state.hydra","inputs":[{"from":"_graph_input_value","to":"odona6p","as":"target"}]},{"id":"ax6cc4l","inputs":[{"from":"odona6p","to":"ax6cc4l","as":"self"},{"from":"nomp408","to":"ax6cc4l","as":"r"}],"ref":"solid"},{"name":"hydra_runnable","id":"cfvatqc","inputs":[{"from":"k6wjuql","to":"cfvatqc","as":"fn"},{"from":"7w466r6","to":"cfvatqc","as":"value"}],"ref":"modify_state_runnable"},{"id":"k6wjuql","ref":"runnable","inputs":[{"from":"gsmms6f","to":"k6wjuql","as":"fn"}]},{"id":"7w466r6","value":"hydra_runnable","inputs":[]},{"id":"igndwq8","inputs":[{"from":"cfvatqc","to":"igndwq8","as":"arg0"}],"ref":"new_array"},{"id":"log_state","out":"log_state","nodes":[{"id":"log_state","ref":"runnable","inputs":[{"from":"state_log","to":"log_state","as":"fn"}]},{"id":"state_log","ref":"log"},{"id":"5xhvdcw"},{"id":"i81dthp","ref":"arg","value":"state"},{"id":"vsjybon","ref":"arg","value":"payload"}],"edges":[{"from":"state_log","to":"log_state","as":"fn"},{"from":"5xhvdcw","to":"state_log","as":"value","type":"resolve"},{"from":"i81dthp","to":"5xhvdcw","as":"state"},{"from":"vsjybon","to":"5xhvdcw","as":"payload"}],"inputs":[]},{"id":"bsg03ct","name":"hydra.out","in":"3hpve16","out":"bsg03ct","nodes":[{"name":"out","id":"bsg03ct","inputs":[{"from":"k25cjgh","to":"bsg03ct","as":"fn"},{"from":"3hpve16","to":"bsg03ct","as":"_"},{"from":"47yzp9u","to":"bsg03ct","as":"self"}],"ref":"call"},{"id":"k25cjgh","value":"out"},{"name":"in","id":"3hpve16"},{"id":"47yzp9u","ref":"arg","value":"self"}],"edges":[{"from":"k25cjgh","to":"bsg03ct","as":"fn"},{"from":"3hpve16","to":"bsg03ct","as":"_"},{"from":"47yzp9u","to":"bsg03ct","as":"self"}],"inputs":[{"from":"ax6cc4l","to":"bsg03ct","as":"self"}]},{"id":"gjeyyc8/gjeyyc8","inputs":[{"from":"gjeyyc8/undpcv9","to":"gjeyyc8/gjeyyc8","as":"value"},{"from":"gjeyyc8/v12am1c","to":"gjeyyc8/gjeyyc8","as":"fn"}],"ref":"modify_state_runnable","name":"base display/out"},{"id":"gjeyyc8/undpcv9","value":"result_display","inputs":[]},{"id":"gjeyyc8/v12am1c","ref":"runnable","inputs":[{"from":"gjeyyc8/ij2pcgj","to":"gjeyyc8/v12am1c","as":"fn"}]},{"id":"gjeyyc8/ij2pcgj","ref":"h","inputs":[{"from":"gjeyyc8/cw76axk","to":"gjeyyc8/ij2pcgj","as":"children"}]},{"id":"gjeyyc8/cw76axk","ref":"new_array","inputs":[{"from":"gjeyyc8/5yxmxua","to":"gjeyyc8/cw76axk","as":"arg0"},{"from":"bw4iez5","to":"gjeyyc8/cw76axk","as":"arg1"}]},{"id":"gjeyyc8/5yxmxua","ref":"h","inputs":[{"from":"gjeyyc8/vgv61zj","to":"gjeyyc8/5yxmxua","as":"children"},{"from":"gjeyyc8/jstjx7g","to":"gjeyyc8/5yxmxua","as":"props"},{"from":"gjeyyc8/h40e3j9","to":"gjeyyc8/5yxmxua","as":"dom_type"}]},{"id":"gjeyyc8/vgv61zj","ref":"h_text","inputs":[{"from":"gjeyyc8/je6968w","to":"gjeyyc8/vgv61zj","as":"text"}]},{"id":"gjeyyc8/jstjx7g","inputs":[{"from":"gjeyyc8/o1j78dd","to":"gjeyyc8/jstjx7g","as":"key"}]},{"id":"gjeyyc8/h40e3j9","value":"style","inputs":[]},{"id":"gjeyyc8/je6968w","value":"canvas { position: fixed; top:0; left: 0; z-index: -1; } #node-editor { background-color: #0003;} ","inputs":[]},{"id":"gjeyyc8/o1j78dd","value":"result-view","inputs":[]},{"id":"emxxr7p","inputs":[],"value":"greytone"},{"id":"kjo14lt","ref":"arg","value":"state.hydra_runnable","inputs":[{"from":"_graph_input_value","to":"kjo14lt","as":"target"}]},{"id":"cdv4lrg","inputs":[{"from":"kjo14lt","to":"cdv4lrg","as":"value"}],"ref":"log"},{"id":"dsglk3g/dsglk3g","inputs":[{"from":"dsglk3g/ibtsw10","to":"dsglk3g/dsglk3g","as":"input"},{"from":"dsglk3g/f46k7mr","to":"dsglk3g/dsglk3g","as":"ctrl_Enter"}],"ref":"switch","name":"ctrl-enter-hydra/out"},{"id":"dsglk3g/ibtsw10","script":"return payload ? (payload.ctrlKey ? 'ctrl_' : '') + (payload.shiftKey ? 'shift_' : '') + payload.key : undefined; ","inputs":[{"from":"dsglk3g/whn6h1u","to":"dsglk3g/ibtsw10","as":"payload"}]},{"id":"dsglk3g/f46k7mr","value":"state.hydra_runnable","ref":"arg","inputs":[{"from":"_graph_input_value","to":"dsglk3g/f46k7mr","as":"target"}]},{"id":"dsglk3g/whn6h1u","ref":"arg","value":"payload.event","inputs":[{"from":"_graph_input_value","to":"dsglk3g/whn6h1u","as":"target"}]},{"id":"2jg5vn0/2jg5vn0","inputs":[{"from":"2jg5vn0/ytyqx3l","to":"2jg5vn0/2jg5vn0","as":"value"},{"from":"2jg5vn0/gu7ln5f","to":"2jg5vn0/2jg5vn0","as":"fn"}],"ref":"modify_state_runnable","name":"create_hydra/out"},{"id":"2jg5vn0/gu7ln5f","ref":"runnable","inputs":[{"from":"2jg5vn0/glo8a7a","to":"2jg5vn0/gu7ln5f","as":"fn"}]},{"id":"2jg5vn0/ytyqx3l","value":"hydra","inputs":[]},{"id":"2jg5vn0/glo8a7a","ref":"if","inputs":[{"from":"2jg5vn0/cfwlc01","to":"2jg5vn0/glo8a7a","as":"true"},{"from":"2jg5vn0/my8aexe","to":"2jg5vn0/glo8a7a","as":"false"},{"from":"2jg5vn0/yo7x6t7","to":"2jg5vn0/glo8a7a","as":"pred"}]},{"id":"2jg5vn0/yo7x6t7","ref":"arg","value":"state_value","inputs":[{"from":"_graph_input_value","to":"2jg5vn0/yo7x6t7","as":"target"}]},{"id":"2jg5vn0/cfwlc01","ref":"arg","value":"state_value","inputs":[{"from":"_graph_input_value","to":"2jg5vn0/cfwlc01","as":"target"}]},{"id":"2jg5vn0/my8aexe","script":"return new Hydra({makeGlobal: false}).synth;","inputs":[]},{"id":"81ggj54","ref":"arg","value":"state.greytone","inputs":[{"from":"_graph_input_value","to":"81ggj54","as":"target"}]},{"id":"nomp408","script":"const val = parseFloat(r);\n\nreturn isNaN(val) ? 0 : val;","inputs":[{"from":"81ggj54","to":"nomp408","as":"r"}]},{"id":"call","extern":"utility.call"},{"id":"hydra"},{"id":"create_hydra","extern":"hydra.create"},{"id":"array"},{"id":"utility"},{"id":"flow"},{"id":"hyperapp"},{"id":"object"},{"id":"custom"},{"id":"JSON"},{"id":"log","args":["value"],"nodes":[{"id":"in"},{"id":"value","ref":"arg","value":"value"},{"id":"out","args":[],"script":"console.log(_node.name ?? _node.id); console.log(value); return value"}],"edges":[{"from":"in","to":"out","as":"input"},{"from":"value","to":"out","as":"value"}]},{"id":"fetch","name":"fetch","extern":"utility.fetch"},{"id":"call","name":"call","extern":"utility.call"},{"id":"stringify","name":"stringify","extern":"JSON.stringify"},{"id":"append","type":"(array: A[], item: A) => A[]","nodes":[{"id":"in"},{"id":"array","ref":"arg","value":"array"},{"id":"item","ref":"arg","value":"item"},{"id":"out","script":"return array.concat(Array.isArray(item) ? item : [item])"}],"edges":[{"from":"in","to":"out","as":"_","type":"ref"},{"from":"array","to":"out","as":"array"},{"from":"item","to":"out","as":"item"}]},{"id":"filter","name":"filter","in":"74n1jfm","out":"lahq5z4","nodes":[{"id":"lahq5z4","args":[],"name":"filter/out","script":"const filter_fn = _lib.no.executeGraphNode({graph: _graph})(fn); return arr.filter(filter_fn)"},{"id":"pfoypo5","args":[],"ref":"arg","value":"key"},{"id":"zinx621","args":[],"ref":"arg","value":"value"},{"id":"x2sz5kb","args":[],"ref":"arg","value":"arr"},{"id":"fn","ref":"arg","value":"fn"},{"id":"74n1jfm","args":[],"name":"filter/in"}],"edges":[{"from":"pfoypo5","to":"lahq5z4","as":"key"},{"from":"zinx621","to":"lahq5z4","as":"value"},{"from":"x2sz5kb","to":"lahq5z4","as":"arr"},{"from":"74n1jfm","to":"lahq5z4","as":"input"},{"from":"fn","to":"lahq5z4","as":"fn"}]},{"id":"default","nodes":[{"id":"in"},{"id":"value","ref":"arg","value":"value"},{"id":"otherwise","ref":"arg","value":"otherwise"},{"id":"out","args":["data","default_value"],"script":"return value ?? otherwise"}],"edges":[{"from":"in","to":"out","as":"args"},{"from":"value","to":"out","as":"value"},{"from":"otherwise","to":"out","as":"otherwise"}]},{"id":"switch","args":["data","input"],"nodes":[{"id":"in"},{"id":"out","args":["data","input"],"script":"return data[input] ?? otherwise;"},{"id":"input","ref":"arg","value":"input"},{"id":"otherwise","ref":"arg","value":"otherwise"}],"edges":[{"from":"in","to":"out","as":"data"},{"from":"input","to":"out","as":"input"},{"from":"otherwise","to":"out","as":"otherwise"}]},{"id":"if","nodes":[{"id":"in"},{"id":"pred","ref":"arg","value":"pred"},{"id":"true","ref":"arg","value":"true"},{"id":"false","ref":"arg","value":"false"},{"id":"data"},{"id":"out","script":"return !!pred ? data.true_val : data.false_val"}],"edges":[{"from":"in","to":"out","as":"data"},{"from":"true","to":"data","as":"true_val"},{"from":"false","to":"data","as":"false_val"},{"from":"data","to":"out","as":"data"},{"from":"pred","to":"out","as":"pred"}]},{"id":"runnable","out":"out","nodes":[{"id":"fn","ref":"arg","value":"fn"},{"id":"out","script":"const parent_id = _node.id.substring(0, _node.id.lastIndexOf('/')); const input = _graph.nodes.find(n => n.id === parent_id).inputs.find(i => i.as === 'fn'); return input ? {fn: input.from, graph: _graph} : false"}],"edges":[{"from":"fn","to":"out","as":"fn","type":"ref"}]},{"id":"execute_graph","nodes":[{"id":"in"},{"id":"fn","ref":"arg","value":"fn"},{"id":"fn_graph","ref":"arg","value":"fn_graph"},{"id":"args","ref":"arg","value":"_args"},{"id":"filter_args","script":"const ret = {...args}; delete ret.fn; delete ret.graph;"},{"id":"out","script":"const res_graph = fn_graph ?? _graph; return (...inner_args) => {return _lib.no.executeGraphNode({graph: {...res_graph, nodes: [...res_graph.nodes], edges: [...res_graph.edges]}})(fn)(Object.keys(args).length > 0 ? Object.assign(args, inner_args.length === 1 ? inner_args[0] : inner_args) : inner_args.length === 1 ? inner_args[0] : inner_args);}"}],"edges":[{"from":"in","to":"out","as":"args"},{"from":"fn","to":"out","as":"fn"},{"from":"fn_graph","to":"out","as":"fn_graph"}]},{"id":"apply","script":"return _lib.no.executeGraphNode({graph: fn.graph ?? _graph})(fn.fn ?? fn)(args);"},{"id":"partial","nodes":[{"id":"in"},{"id":"input_value","ref":"arg","value":"_args"},{"id":"fn","ref":"arg","value":"fn"},{"id":"args","ref":"arg","value":"args"},{"id":"out","script":"return _lib.no.executeGraphNode({graph: _graph})(fn)(Object.assign({}, _args, args))"}],"edges":[{"from":"in","to":"out","as":"args","type":"ref"},{"from":"fn","to":"out","as":"fn"},{"from":"args","to":"out","as":"args"},{"from":"input_value","to":"out","as":"_args"}]},{"id":"new_array","name":"new_array","extern":"utility.new_array"},{"id":"get","args":["target","path"],"nodes":[{"id":"in"},{"id":"def","ref":"arg","value":"def"},{"id":"target","ref":"arg","value":"target"},{"id":"path","ref":"arg","value":"path"},{"id":"fill_default","args":["input"],"script":"return input?.default ??  null"},{"id":"get_args","ref":"new_array"},{"id":"out","extern":"just.get"}],"edges":[{"from":"in","to":"out","as":"input"},{"from":"def","to":"out","as":"def"},{"from":"path","to":"out","as":"path"},{"from":"target","to":"out","as":"target"},{"from":"get_args","to":"_out","as":"args"}]},{"id":"arg","args":["node_inputs"],"extern":"utility.arg"},{"id":"set","type":"(target: any, value: any, path: string) => any","script":"const keys = path.split('.'); const check = (o, v, k) => k.length === 1 ? {...o, [k[0]]: v, _needsresolve: true} : o.hasOwnProperty(k[0]) ? {...o, [k[0]]: check(o[k[0]], v, k.slice(1)), _needsresolve: true} : o; return check(target, value, keys)"},{"id":"delete","out":"out","nodes":[{"id":"in"},{"id":"target","ref":"arg","value":"target"},{"id":"path","ref":"arg","value":"path"},{"id":"out","script":"const new_val = Object.assign({}, target); delete target[path]; return new_val"}],"edges":[{"from":"in","to":"out","as":"args"},{"from":"target","to":"out","as":"target"},{"from":"path","to":"out","as":"path"}]},{"id":"map","name":"map","in":"m3b5wg3","out":"tgurdpo","nodes":[{"id":"tgurdpo","ref":"call","name":"out"},{"id":"m3b5wg3","name":"in"},{"id":"rielyq8","value":"map","name":"rielyq8"},{"ref":"arg","id":"1rre4bx","value":"array","name":"1rre4bx"},{"id":"w0zzawl","ref":"new_array","name":"w0zzawl"},{"id":"pdljod1","name":"pdljod1","script":"return (element, index, array) => _lib.no.runGraph(_graph, fn, {element,index,array});"},{"id":"2lvs5dj","script":"return _graph","name":"2lvs5dj"},{"ref":"arg","id":"6g75abk","value":"fn","name":"6g75abk"}],"edges":[{"from":"m3b5wg3","to":"tgurdpo","as":"args","type":"ref"},{"from":"rielyq8","to":"tgurdpo","as":"fn"},{"from":"1rre4bx","to":"tgurdpo","as":"self"},{"from":"w0zzawl","to":"tgurdpo","as":"args","type":"resolve"},{"from":"pdljod1","to":"w0zzawl","as":"a0"},{"from":"2lvs5dj","to":"pdljod1","as":"graph"},{"from":"6g75abk","to":"pdljod1","as":"fn"}]},{"id":"toggle","name":"toggle","in":"itrzmbe","out":"nn4twx9","nodes":[{"id":"nn4twx9","ref":"h","inputs":[{"from":"lvzwtzi","to":"nn4twx9","as":"children"},{"from":"t6q6rvf","to":"nn4twx9","as":"props"},{"from":"tchu5kq","to":"nn4twx9","as":"dom_type"}],"name":"out"},{"id":"lvzwtzi","ref":"new_array"},{"id":"t6q6rvf"},{"id":"tchu5kq","value":"button"},{"id":"583nwco","name":"in"},{"id":"itrzmbe","name":"in"},{"id":"vmehp75/h4hkmke","ref":"h_text","name":"button_text"},{"id":"punpbfw","ref":"execute_graph","name":"onclick_fn"},{"id":"2aqvso8","ref":"arg","value":"value"},{"id":"teuf938","ref":"arg","value":"value"},{"id":"1067z1h","ref":"new_array"},{"id":"b8q8y2q","ref":"new_array"},{"id":"pprukwn","ref":"set"},{"id":"zu0hb6e","ref":"arg","value":"0.update_hyperapp"},{"id":"eo8hxkq","script":"return !toggle;"},{"id":"s6847dx","ref":"arg","value":"0"},{"id":"5g3gdi1","script":"return 'result.' + value;"},{"id":"flcuh31","ref":"get"},{"id":"0eoq13n","ref":"arg","value":"value"},{"id":"ysqu0jj","ref":"arg","value":"0.result"},{"id":"8ji5lb6","ref":"arg","value":"value"}],"edges":[{"from":"lvzwtzi","to":"nn4twx9","as":"children"},{"from":"t6q6rvf","to":"nn4twx9","as":"props"},{"from":"tchu5kq","to":"nn4twx9","as":"dom_type"},{"from":"583nwco","to":"nn4twx9","as":"arg3"},{"from":"itrzmbe","to":"nn4twx9","as":"arg4"},{"to":"lvzwtzi","from":"vmehp75/h4hkmke","as":"arg1"},{"from":"punpbfw","to":"t6q6rvf","as":"onclick"},{"from":"2aqvso8","to":"vmehp75/h4hkmke","as":"text"},{"from":"teuf938","to":"punpbfw","as":"value"},{"from":"1067z1h","to":"punpbfw","as":"fn","type":"ref"},{"from":"b8q8y2q","to":"1067z1h","as":"arg1"},{"from":"pprukwn","to":"1067z1h","as":"arg0"},{"from":"zu0hb6e","to":"b8q8y2q","as":"update_hyperapp"},{"from":"eo8hxkq","to":"pprukwn","as":"value"},{"from":"s6847dx","to":"pprukwn","as":"target"},{"from":"5g3gdi1","to":"pprukwn","as":"path"},{"from":"flcuh31","to":"eo8hxkq","as":"toggle"},{"from":"0eoq13n","to":"5g3gdi1","as":"value"},{"from":"ysqu0jj","to":"flcuh31","as":"target"},{"from":"8ji5lb6","to":"flcuh31","as":"path"}]},{"id":"input","name":"input","in":"7rhq0q5","out":"nn4twx9","nodes":[{"id":"nn4twx9","ref":"h","inputs":[{"from":"lvzwtzi","to":"nn4twx9","as":"children"},{"from":"t6q6rvf","to":"nn4twx9","as":"props"},{"from":"tchu5kq","to":"nn4twx9","as":"dom_type"}],"name":"out"},{"id":"gvkhkfw","ref":"new_array"},{"id":"7rhq0q5","name":"in"},{"id":"4972gx3","ref":"h"},{"id":"1ldhfah","ref":"h","name":"label"},{"id":"t6q6rvf"},{"id":"ee5i5r2","value":"input"},{"id":"wet0jdv","ref":"new_array"},{"id":"gcuxiw9"},{"id":"875c1wk","value":"label"},{"id":"punpbfw","ref":"execute_graph","name":"onchange_fn"},{"id":"2zxw9oo","ref":"execute_graph","name":"stop_propagation"},{"id":"utkc9o6","ref":"h_text"},{"id":"jxl9r29","script":"return \"input-\" + value;"},{"id":"teuf938","ref":"arg","value":"value"},{"id":"1067z1h","ref":"new_array"},{"id":"qseh2tb","ref":"new_array"},{"id":"trd8ptp","ref":"arg","value":"value"},{"id":"zfrrk0z","ref":"arg","value":"value"},{"id":"b8q8y2q","ref":"new_array"},{"id":"pprukwn","ref":"set"},{"id":"1wps21n","name":"stop propagation effect","out":"hj2cig0","nodes":[{"id":"hj2cig0","ref":"new_array","name":"stop propagation effect"},{"id":"1pvaim9","ref":"execute_graph"},{"id":"0o86xp3","ref":"arg","value":"1"},{"id":"d60jwms","script":"payload.stopPropagation();"},{"id":"xgbubrq","ref":"arg","value":"1"}],"edges":[{"from":"1pvaim9","to":"hj2cig0","as":"a0"},{"from":"0o86xp3","to":"hj2cig0","as":"a1"},{"from":"d60jwms","to":"1pvaim9","as":"fn","type":"ref"},{"from":"xgbubrq","to":"d60jwms","as":"payload"}]},{"id":"y5q7mbn","ref":"arg","value":"0"},{"id":"zu0hb6e","ref":"arg","value":"0.update_hyperapp"},{"id":"s6847dx","ref":"arg","value":"0"},{"id":"5g3gdi1","script":"return 'result.' + value;"},{"id":"o1aktwv","ref":"arg","value":"1.target.value"},{"id":"0eoq13n","ref":"arg","value":"value"}],"edges":[{"from":"gvkhkfw","to":"nn4twx9","as":"children"},{"from":"7rhq0q5","to":"nn4twx9","as":"props"},{"from":"4972gx3","to":"gvkhkfw","as":"arg1"},{"from":"1ldhfah","to":"gvkhkfw","as":"arg0"},{"from":"t6q6rvf","to":"4972gx3","as":"props"},{"from":"ee5i5r2","to":"4972gx3","as":"dom_type"},{"from":"wet0jdv","to":"1ldhfah","as":"children"},{"from":"gcuxiw9","to":"1ldhfah","as":"props"},{"from":"875c1wk","to":"1ldhfah","as":"dom_type"},{"from":"punpbfw","to":"t6q6rvf","as":"onchange"},{"from":"2zxw9oo","to":"t6q6rvf","as":"onkeydown"},{"from":"utkc9o6","to":"wet0jdv","as":"arg0"},{"from":"jxl9r29","to":"gcuxiw9","as":"for"},{"from":"teuf938","to":"punpbfw","as":"value"},{"from":"1067z1h","to":"punpbfw","as":"fn","type":"ref"},{"to":"2zxw9oo","from":"qseh2tb","as":"fn","type":"ref"},{"from":"trd8ptp","to":"utkc9o6","as":"text"},{"from":"zfrrk0z","to":"jxl9r29","as":"value"},{"from":"b8q8y2q","to":"1067z1h","as":"arg1"},{"from":"pprukwn","to":"1067z1h","as":"arg0"},{"from":"1wps21n","to":"qseh2tb","as":"a1"},{"from":"y5q7mbn","to":"qseh2tb","as":"a0"},{"from":"zu0hb6e","to":"b8q8y2q","as":"update_hyperapp"},{"from":"s6847dx","to":"pprukwn","as":"target"},{"from":"5g3gdi1","to":"pprukwn","as":"path"},{"from":"o1aktwv","to":"pprukwn","as":"value"},{"from":"0eoq13n","to":"5g3gdi1","as":"value"}]},{"id":"modify_state_runnable","name":"modify_state_runnable","in":"sueor1k","out":"tpcqvm2","nodes":[{"name":"modify_state_runnable","id":"tpcqvm2","inputs":[{"from":"bkm8hz8","to":"tpcqvm2","as":"arg0"},{"from":"sueor1k","to":"tpcqvm2","as":"arg1"}],"ref":"new_array"},{"id":"bkm8hz8","name":"create_hydra","ref":"runnable"},{"id":"sueor1k","name":"in"},{"id":"f5ybb5f","ref":"call"},{"id":"qov8vrr","ref":"arg","value":"dispatch"},{"id":"eil1eq5","ref":"new_array"},{"id":"r07vaaz","ref":"runnable"},{"id":"cb92j91","value":"payload","ref":"arg"},{"id":"saonc89"},{"id":"0nyu2om","name":"modify_state_value","ref":"modify_state_value"},{"id":"mo6m3pd","value":"payload.payload.fn","ref":"arg"},{"id":"c18pwko","ref":"arg","value":"payload.payload.value"}],"edges":[{"from":"bkm8hz8","to":"tpcqvm2","as":"arg0"},{"from":"sueor1k","to":"tpcqvm2","as":"arg1"},{"from":"f5ybb5f","to":"bkm8hz8","as":"fn"},{"from":"qov8vrr","to":"f5ybb5f","as":"self"},{"from":"eil1eq5","to":"f5ybb5f","as":"args"},{"from":"r07vaaz","to":"eil1eq5","as":"arg0"},{"from":"cb92j91","to":"eil1eq5","as":"payload"},{"from":"saonc89","to":"r07vaaz","as":"fn"},{"from":"0nyu2om","to":"saonc89","as":"state"},{"from":"mo6m3pd","to":"0nyu2om","as":"fn"},{"from":"c18pwko","to":"0nyu2om","as":"value"}],"inputs":[{"from":"ngkl1rp/ayf70m0/rrxfq4l","to":"tpcqvm2","as":"fn"},{"from":"ngkl1rp/lw849n7","to":"tpcqvm2","as":"value"}]},{"id":"modify_state_value","name":"modify_state_value","in":"9g39i2c","out":"0nyu2om","nodes":[{"name":"out","id":"0nyu2om","ref":"set"},{"name":"in","id":"9g39i2c"},{"id":"ehu0yf5","value":"value","ref":"arg"},{"id":"rcfwyh8","ref":"arg","value":"state"},{"id":"npwm1c5","ref":"apply"},{"id":"5dkffft"},{"id":"1t54i2i","ref":"arg","value":"fn"},{"id":"2u2jmvs","ref":"get"},{"id":"xur00me","value":"value","ref":"arg"},{"id":"a01lbb8","ref":"arg","value":"state"}],"edges":[{"to":"0nyu2om","from":"9g39i2c","as":"fn"},{"from":"ehu0yf5","to":"0nyu2om","as":"path"},{"from":"rcfwyh8","to":"0nyu2om","as":"target"},{"from":"npwm1c5","to":"0nyu2om","as":"value"},{"from":"5dkffft","to":"npwm1c5","as":"args"},{"from":"1t54i2i","to":"npwm1c5","as":"fn"},{"from":"rcfwyh8","to":"5dkffft","as":"state"},{"from":"2u2jmvs","to":"5dkffft","as":"state_value"},{"from":"xur00me","to":"2u2jmvs","as":"path"},{"from":"a01lbb8","to":"2u2jmvs","as":"target"}],"inputs":[{"from":"plnglbg/mo6m3pd","to":"plnglbg/0nyu2om","as":"fn"},{"from":"plnglbg/c18pwko","to":"plnglbg/0nyu2om","as":"value"}]},{"id":"h","nodes":[{"id":"in"},{"id":"children","ref":"arg","value":"children"},{"id":"props","ref":"arg","value":"props"},{"id":"fill_children","args":["children"],"script":"return children === undefined ? [] : children.length !== undefined ? children.filter(c => !!c).map(c => c.el ?? c) : [children.el ?? children]"},{"id":"fill_props","args":["input"],"script":"return props ?? {}"},{"id":"dom_type","ref":"arg","value":"dom_type"},{"id":"div","value":"div"},{"id":"dom_type_def","ref":"default"},{"id":"out","script":"if(!(typeof dom_type === 'string' || typeof text === 'string')){ throw new Error('invalid element');} children.filter(c => c).forEach(c => {if(!(typeof c.dom_type === 'string' || typeof c.text === 'string')){throw new Error ('invalid child element');}}); return {el: {dom_type, props, children}}"},{"id":"_out"}],"edges":[{"from":"children","to":"fill_children","as":"children"},{"from":"props","to":"fill_props","as":"props"},{"from":"fill_children","to":"out","as":"children","order":1,"type":"resolve"},{"from":"fill_props","to":"out","as":"props"},{"from":"dom_type","to":"dom_type_def","as":"value"},{"from":"div","to":"dom_type_def","as":"otherwise"},{"from":"dom_type_def","to":"out","as":"dom_type"},{"from":"in","to":"out","as":"args","type":"ref"}]},{"id":"h_text","nodes":[{"id":"in"},{"id":"text","ref":"arg","value":"text"},{"id":"dom_type","value":"text_value"},{"id":"el"},{"id":"out","args":["text"]}],"edges":[{"from":"in","to":"out","as":"input"},{"from":"dom_type","to":"el","as":"dom_type"},{"from":"text","to":"el","as":"text"},{"from":"el","to":"out","as":"el"}]},{"edges":[{"to":"args","as":"arg0","from":"scale"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"noise","id":"noise","out":"hydra_out","nodes":[{"ref":"arg","id":"scale","value":"scale"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"noise"}]},{"edges":[{"to":"args","as":"arg0","from":"scale"},{"to":"args","as":"arg1","from":"speed"},{"to":"args","as":"arg2","from":"blending"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"voronoi","id":"voronoi","out":"hydra_out","nodes":[{"ref":"arg","id":"scale","value":"scale"},{"ref":"arg","id":"speed","value":"speed"},{"ref":"arg","id":"blending","value":"blending"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"voronoi"}]},{"edges":[{"to":"args","as":"arg0","from":"frequency"},{"to":"args","as":"arg1","from":"sync"},{"to":"args","as":"arg2","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"osc","id":"osc","out":"hydra_out","nodes":[{"ref":"arg","id":"frequency","value":"frequency"},{"ref":"arg","id":"sync","value":"sync"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"osc"}]},{"edges":[{"to":"args","as":"arg0","from":"sides"},{"to":"args","as":"arg1","from":"radius"},{"to":"args","as":"arg2","from":"smoothing"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"shape","id":"shape","out":"hydra_out","nodes":[{"ref":"arg","id":"sides","value":"sides"},{"ref":"arg","id":"radius","value":"radius"},{"ref":"arg","id":"smoothing","value":"smoothing"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"shape"}]},{"edges":[{"to":"args","as":"arg0","from":"speed"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"gradient","id":"gradient","out":"hydra_out","nodes":[{"ref":"arg","id":"speed","value":"speed"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"gradient"}]},{"edges":[{"to":"args","as":"arg0","from":"tex"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"src","id":"src","out":"hydra_out","nodes":[{"ref":"arg","id":"tex","value":"tex"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"src"}]},{"edges":[{"to":"args","as":"arg0","from":"r"},{"to":"args","as":"arg1","from":"g"},{"to":"args","as":"arg2","from":"b"},{"to":"args","as":"arg3","from":"a"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"solid","id":"solid","out":"hydra_out","nodes":[{"ref":"arg","id":"r","value":"r"},{"ref":"arg","id":"g","value":"g"},{"ref":"arg","id":"b","value":"b"},{"ref":"arg","id":"a","value":"a"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"solid"}]},{"edges":[{"to":"args","as":"arg0","from":"angle"},{"to":"args","as":"arg1","from":"speed"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"rotate","id":"rotate","out":"hydra_out","nodes":[{"ref":"arg","id":"angle","value":"angle"},{"ref":"arg","id":"speed","value":"speed"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"rotate"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"to":"args","as":"arg1","from":"xMult"},{"to":"args","as":"arg2","from":"yMult"},{"to":"args","as":"arg3","from":"offsetX"},{"to":"args","as":"arg4","from":"offsetY"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"scale","id":"scale","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"ref":"arg","id":"xMult","value":"xMult"},{"ref":"arg","id":"yMult","value":"yMult"},{"ref":"arg","id":"offsetX","value":"offsetX"},{"ref":"arg","id":"offsetY","value":"offsetY"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"scale"}]},{"edges":[{"to":"args","as":"arg0","from":"pixelX"},{"to":"args","as":"arg1","from":"pixelY"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"pixelate","id":"pixelate","out":"hydra_out","nodes":[{"ref":"arg","id":"pixelX","value":"pixelX"},{"ref":"arg","id":"pixelY","value":"pixelY"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"pixelate"}]},{"edges":[{"to":"args","as":"arg0","from":"bins"},{"to":"args","as":"arg1","from":"gamma"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"posterize","id":"posterize","out":"hydra_out","nodes":[{"ref":"arg","id":"bins","value":"bins"},{"ref":"arg","id":"gamma","value":"gamma"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"posterize"}]},{"edges":[{"to":"args","as":"arg0","from":"r"},{"to":"args","as":"arg1","from":"g"},{"to":"args","as":"arg2","from":"b"},{"to":"args","as":"arg3","from":"a"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"shift","id":"shift","out":"hydra_out","nodes":[{"ref":"arg","id":"r","value":"r"},{"ref":"arg","id":"g","value":"g"},{"ref":"arg","id":"b","value":"b"},{"ref":"arg","id":"a","value":"a"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"shift"}]},{"edges":[{"to":"args","as":"arg0","from":"repeatX"},{"to":"args","as":"arg1","from":"repeatY"},{"to":"args","as":"arg2","from":"offsetX"},{"to":"args","as":"arg3","from":"offsetY"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"repeat","id":"repeat","out":"hydra_out","nodes":[{"ref":"arg","id":"repeatX","value":"repeatX"},{"ref":"arg","id":"repeatY","value":"repeatY"},{"ref":"arg","id":"offsetX","value":"offsetX"},{"ref":"arg","id":"offsetY","value":"offsetY"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"repeat"}]},{"edges":[{"to":"args","as":"arg0","from":"repeatX"},{"to":"args","as":"arg1","from":"repeatY"},{"to":"args","as":"arg2","from":"offsetX"},{"to":"args","as":"arg3","from":"offsetY"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateRepeat","id":"modulateRepeat","out":"hydra_out","nodes":[{"ref":"arg","id":"repeatX","value":"repeatX"},{"ref":"arg","id":"repeatY","value":"repeatY"},{"ref":"arg","id":"offsetX","value":"offsetX"},{"ref":"arg","id":"offsetY","value":"offsetY"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateRepeat"}]},{"edges":[{"to":"args","as":"arg0","from":"reps"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"repeatX","id":"repeatX","out":"hydra_out","nodes":[{"ref":"arg","id":"reps","value":"reps"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"repeatX"}]},{"edges":[{"to":"args","as":"arg0","from":"reps"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateRepeatX","id":"modulateRepeatX","out":"hydra_out","nodes":[{"ref":"arg","id":"reps","value":"reps"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateRepeatX"}]},{"edges":[{"to":"args","as":"arg0","from":"reps"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"repeatY","id":"repeatY","out":"hydra_out","nodes":[{"ref":"arg","id":"reps","value":"reps"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"repeatY"}]},{"edges":[{"to":"args","as":"arg0","from":"reps"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateRepeatY","id":"modulateRepeatY","out":"hydra_out","nodes":[{"ref":"arg","id":"reps","value":"reps"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateRepeatY"}]},{"edges":[{"to":"args","as":"arg0","from":"nSides"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"kaleid","id":"kaleid","out":"hydra_out","nodes":[{"ref":"arg","id":"nSides","value":"nSides"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"kaleid"}]},{"edges":[{"to":"args","as":"arg0","from":"nSides"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateKaleid","id":"modulateKaleid","out":"hydra_out","nodes":[{"ref":"arg","id":"nSides","value":"nSides"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateKaleid"}]},{"edges":[{"to":"args","as":"arg0","from":"scrollX"},{"to":"args","as":"arg1","from":"scrollY"},{"to":"args","as":"arg2","from":"speedX"},{"to":"args","as":"arg3","from":"speedY"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"scroll","id":"scroll","out":"hydra_out","nodes":[{"ref":"arg","id":"scrollX","value":"scrollX"},{"ref":"arg","id":"scrollY","value":"scrollY"},{"ref":"arg","id":"speedX","value":"speedX"},{"ref":"arg","id":"speedY","value":"speedY"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"scroll"}]},{"edges":[{"to":"args","as":"arg0","from":"scrollX"},{"to":"args","as":"arg1","from":"speed"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"scrollX","id":"scrollX","out":"hydra_out","nodes":[{"ref":"arg","id":"scrollX","value":"scrollX"},{"ref":"arg","id":"speed","value":"speed"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"scrollX"}]},{"edges":[{"to":"args","as":"arg0","from":"scrollX"},{"to":"args","as":"arg1","from":"speed"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateScrollX","id":"modulateScrollX","out":"hydra_out","nodes":[{"ref":"arg","id":"scrollX","value":"scrollX"},{"ref":"arg","id":"speed","value":"speed"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateScrollX"}]},{"edges":[{"to":"args","as":"arg0","from":"scrollY"},{"to":"args","as":"arg1","from":"speed"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"scrollY","id":"scrollY","out":"hydra_out","nodes":[{"ref":"arg","id":"scrollY","value":"scrollY"},{"ref":"arg","id":"speed","value":"speed"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"scrollY"}]},{"edges":[{"to":"args","as":"arg0","from":"scrollY"},{"to":"args","as":"arg1","from":"speed"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateScrollY","id":"modulateScrollY","out":"hydra_out","nodes":[{"ref":"arg","id":"scrollY","value":"scrollY"},{"ref":"arg","id":"speed","value":"speed"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateScrollY"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"add","id":"add","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"add"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"sub","id":"sub","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"sub"}]},{"edges":[{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"layer","id":"layer","out":"hydra_out","nodes":[{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"layer"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"blend","id":"blend","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"blend"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"mult","id":"mult","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"mult"}]},{"edges":[{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"diff","id":"diff","out":"hydra_out","nodes":[{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"diff"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulate","id":"modulate","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulate"}]},{"edges":[{"to":"args","as":"arg0","from":"multiple"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateScale","id":"modulateScale","out":"hydra_out","nodes":[{"ref":"arg","id":"multiple","value":"multiple"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateScale"}]},{"edges":[{"to":"args","as":"arg0","from":"multiple"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulatePixelate","id":"modulatePixelate","out":"hydra_out","nodes":[{"ref":"arg","id":"multiple","value":"multiple"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulatePixelate"}]},{"edges":[{"to":"args","as":"arg0","from":"multiple"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateRotate","id":"modulateRotate","out":"hydra_out","nodes":[{"ref":"arg","id":"multiple","value":"multiple"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateRotate"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"modulateHue","id":"modulateHue","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"modulateHue"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"invert","id":"invert","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"invert"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"contrast","id":"contrast","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"contrast"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"brightness","id":"brightness","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"brightness"}]},{"edges":[{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"mask","id":"mask","out":"hydra_out","nodes":[{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"mask"}]},{"edges":[{"to":"args","as":"arg0","from":"threshold"},{"to":"args","as":"arg1","from":"tolerance"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"luma","id":"luma","out":"hydra_out","nodes":[{"ref":"arg","id":"threshold","value":"threshold"},{"ref":"arg","id":"tolerance","value":"tolerance"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"luma"}]},{"edges":[{"to":"args","as":"arg0","from":"threshold"},{"to":"args","as":"arg1","from":"tolerance"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"thresh","id":"thresh","out":"hydra_out","nodes":[{"ref":"arg","id":"threshold","value":"threshold"},{"ref":"arg","id":"tolerance","value":"tolerance"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"thresh"}]},{"edges":[{"to":"args","as":"arg0","from":"r"},{"to":"args","as":"arg1","from":"g"},{"to":"args","as":"arg2","from":"b"},{"to":"args","as":"arg3","from":"a"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"color","id":"color","out":"hydra_out","nodes":[{"ref":"arg","id":"r","value":"r"},{"ref":"arg","id":"g","value":"g"},{"ref":"arg","id":"b","value":"b"},{"ref":"arg","id":"a","value":"a"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"color"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"saturate","id":"saturate","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"saturate"}]},{"edges":[{"to":"args","as":"arg0","from":"hue"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"hue","id":"hue","out":"hydra_out","nodes":[{"ref":"arg","id":"hue","value":"hue"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"hue"}]},{"edges":[{"to":"args","as":"arg0","from":"amount"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"colorama","id":"colorama","out":"hydra_out","nodes":[{"ref":"arg","id":"amount","value":"amount"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"colorama"}]},{"edges":[{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"prev","id":"prev","out":"hydra_out","nodes":[{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"prev"}]},{"edges":[{"to":"args","as":"arg0","from":"scale"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"sum","id":"sum","out":"hydra_out","nodes":[{"ref":"arg","id":"scale","value":"scale"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"sum"}]},{"edges":[{"to":"args","as":"arg0","from":"scale"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"r","id":"r","out":"hydra_out","nodes":[{"ref":"arg","id":"scale","value":"scale"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"r"}]},{"edges":[{"to":"args","as":"arg0","from":"scale"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"g","id":"g","out":"hydra_out","nodes":[{"ref":"arg","id":"scale","value":"scale"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"g"}]},{"edges":[{"to":"args","as":"arg0","from":"scale"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"b","id":"b","out":"hydra_out","nodes":[{"ref":"arg","id":"scale","value":"scale"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"b"}]},{"edges":[{"to":"args","as":"arg0","from":"scale"},{"to":"args","as":"arg1","from":"offset"},{"from":"args","to":"hydra_out","as":"args"},{"from":"self","to":"hydra_out","as":"self"},{"from":"fn","to":"hydra_out","as":"fn"}],"name":"a","id":"a","out":"hydra_out","nodes":[{"ref":"arg","id":"scale","value":"scale"},{"ref":"arg","id":"offset","value":"offset"},{"id":"hydra_out","ref":"call"},{"id":"args","ref":"new_array"},{"id":"self","ref":"arg","value":"self"},{"id":"fn","value":"a"}]},{"id":"hydra"},{"id":"bw4iez5","name":"input","in":"7rhq0q5","out":"nn4twx9","nodes":[{"id":"nn4twx9","ref":"h","inputs":[{"from":"bw4iez5/gvkhkfw","to":"bw4iez5/nn4twx9","as":"children"},{"from":"bw4iez5/7rhq0q5","to":"bw4iez5/nn4twx9","as":"props"}],"name":"out"},{"id":"gvkhkfw","ref":"new_array"},{"id":"7rhq0q5","name":"in"},{"id":"4972gx3","ref":"h"},{"id":"1ldhfah","ref":"h","name":"label"},{"id":"t6q6rvf"},{"id":"ee5i5r2","value":"input"},{"id":"wet0jdv","ref":"new_array"},{"id":"gcuxiw9"},{"id":"875c1wk","value":"label"},{"id":"punpbfw","ref":"execute_graph","name":"onchange_fn"},{"id":"2zxw9oo","ref":"execute_graph","name":"stop_propagation"},{"id":"utkc9o6","ref":"h_text"},{"id":"jxl9r29","script":"return \"input-\" + value;"},{"id":"teuf938","ref":"arg","value":"value"},{"id":"1067z1h","ref":"new_array"},{"id":"2obm63l","ref":"arg","value":"onchange_fn"},{"id":"qseh2tb","ref":"new_array"},{"id":"trd8ptp","ref":"arg","value":"value"},{"id":"zfrrk0z","ref":"arg","value":"value"},{"id":"b8q8y2q","ref":"new_array"},{"id":"pprukwn","ref":"set"},{"id":"ctuds7y","ref":"new_array"},{"id":"1wps21n","name":"stop propagation effect","out":"hj2cig0","nodes":[{"id":"hj2cig0","ref":"new_array","name":"stop propagation effect"},{"id":"1pvaim9","ref":"execute_graph"},{"id":"0o86xp3","ref":"arg","value":"1"},{"id":"d60jwms","script":"payload.stopPropagation();"},{"id":"xgbubrq","ref":"arg","value":"1"}],"edges":[{"from":"1pvaim9","to":"hj2cig0","as":"a0"},{"from":"0o86xp3","to":"hj2cig0","as":"a1"},{"from":"d60jwms","to":"1pvaim9","as":"fn","type":"ref"},{"from":"xgbubrq","to":"d60jwms","as":"payload"}]},{"id":"y5q7mbn","ref":"arg","value":"0"},{"id":"zu0hb6e","ref":"arg","value":"0.update_hyperapp"},{"id":"s6847dx","ref":"arg","value":"0"},{"id":"o1aktwv","ref":"arg","value":"1.target.value"},{"id":"0eoq13n","ref":"arg","value":"value"},{"id":"bn9vsx1","script":"return dispatch => dispatch(s => [s, [() => _lib.no.executeGraphNode({graph: runnable[0]?.graph ?? runnable.graph})(runnable[0]?.fn ?? runnable.fn)({state: s, payload: undefined, dispatch})]])"},{"id":"31gq2bt","ref":"arg","value":"onchange_fn"}],"edges":[{"from":"gvkhkfw","to":"nn4twx9","as":"children"},{"from":"7rhq0q5","to":"nn4twx9","as":"props"},{"from":"4972gx3","to":"gvkhkfw","as":"arg1"},{"from":"1ldhfah","to":"gvkhkfw","as":"arg0"},{"from":"t6q6rvf","to":"4972gx3","as":"props"},{"from":"ee5i5r2","to":"4972gx3","as":"dom_type"},{"from":"wet0jdv","to":"1ldhfah","as":"children"},{"from":"gcuxiw9","to":"1ldhfah","as":"props"},{"from":"875c1wk","to":"1ldhfah","as":"dom_type"},{"from":"punpbfw","to":"t6q6rvf","as":"onchange"},{"from":"2zxw9oo","to":"t6q6rvf","as":"onkeydown"},{"from":"utkc9o6","to":"wet0jdv","as":"arg0"},{"from":"jxl9r29","to":"gcuxiw9","as":"for"},{"from":"teuf938","to":"punpbfw","as":"value"},{"from":"1067z1h","to":"punpbfw","as":"fn","type":"ref"},{"from":"2obm63l","to":"punpbfw","as":"onchange_fn"},{"to":"2zxw9oo","from":"qseh2tb","as":"fn","type":"ref"},{"from":"trd8ptp","to":"utkc9o6","as":"text"},{"from":"zfrrk0z","to":"jxl9r29","as":"value"},{"from":"b8q8y2q","to":"1067z1h","as":"arg1"},{"from":"pprukwn","to":"1067z1h","as":"arg0"},{"from":"ctuds7y","to":"1067z1h","as":"arg2"},{"from":"1wps21n","to":"qseh2tb","as":"a1"},{"from":"y5q7mbn","to":"qseh2tb","as":"a0"},{"from":"zu0hb6e","to":"b8q8y2q","as":"update_hyperapp"},{"from":"s6847dx","to":"pprukwn","as":"target"},{"from":"o1aktwv","to":"pprukwn","as":"value"},{"from":"0eoq13n","to":"pprukwn","as":"path"},{"from":"bn9vsx1","to":"ctuds7y","as":"arg0"},{"from":"31gq2bt","to":"bn9vsx1","as":"runnable"}],"inputs":[{"from":"emxxr7p","to":"bw4iez5","as":"value"},{"from":"cdv4lrg","to":"bw4iez5","as":"onchange_fn"}]}],"edges":[{"from":"log_state","to":"main/out","as":"arg0"},{"from":"gjeyyc8/gjeyyc8","to":"main/out","as":"arg2"},{"from":"odona6p","to":"ax6cc4l","as":"self"},{"from":"ax6cc4l","to":"bsg03ct","as":"self"},{"from":"k6wjuql","to":"cfvatqc","as":"fn"},{"from":"gsmms6f","to":"k6wjuql","as":"fn"},{"from":"7w466r6","to":"cfvatqc","as":"value"},{"from":"igndwq8","to":"main/out","as":"arg3"},{"from":"cfvatqc","to":"igndwq8","as":"arg0"},{"from":"gjeyyc8/undpcv9","to":"gjeyyc8/gjeyyc8","as":"value"},{"from":"gjeyyc8/v12am1c","to":"gjeyyc8/gjeyyc8","as":"fn"},{"from":"gjeyyc8/ij2pcgj","to":"gjeyyc8/v12am1c","as":"fn"},{"from":"gjeyyc8/cw76axk","to":"gjeyyc8/ij2pcgj","as":"children"},{"from":"gjeyyc8/5yxmxua","to":"gjeyyc8/cw76axk","as":"arg0"},{"from":"gjeyyc8/vgv61zj","to":"gjeyyc8/5yxmxua","as":"children"},{"from":"gjeyyc8/jstjx7g","to":"gjeyyc8/5yxmxua","as":"props"},{"from":"gjeyyc8/h40e3j9","to":"gjeyyc8/5yxmxua","as":"dom_type"},{"from":"gjeyyc8/je6968w","to":"gjeyyc8/vgv61zj","as":"text"},{"from":"gjeyyc8/o1j78dd","to":"gjeyyc8/jstjx7g","as":"key"},{"from":"bw4iez5","to":"gjeyyc8/cw76axk","as":"arg1"},{"from":"emxxr7p","to":"bw4iez5","as":"value"},{"from":"kjo14lt","to":"cdv4lrg","as":"value"},{"from":"cdv4lrg","to":"bw4iez5","as":"onchange_fn"},{"from":"bsg03ct","to":"gsmms6f","as":"fn"},{"from":"dsglk3g/dsglk3g","to":"main/out","as":"arg5"},{"from":"dsglk3g/ibtsw10","to":"dsglk3g/dsglk3g","as":"input"},{"from":"dsglk3g/f46k7mr","to":"dsglk3g/dsglk3g","as":"ctrl_Enter"},{"from":"dsglk3g/whn6h1u","to":"dsglk3g/ibtsw10","as":"payload"},{"from":"2jg5vn0/ytyqx3l","to":"2jg5vn0/2jg5vn0","as":"value"},{"from":"2jg5vn0/glo8a7a","to":"2jg5vn0/gu7ln5f","as":"fn"},{"from":"2jg5vn0/cfwlc01","to":"2jg5vn0/glo8a7a","as":"true"},{"from":"2jg5vn0/my8aexe","to":"2jg5vn0/glo8a7a","as":"false"},{"from":"2jg5vn0/yo7x6t7","to":"2jg5vn0/glo8a7a","as":"pred"},{"from":"2jg5vn0/gu7ln5f","to":"2jg5vn0/2jg5vn0","as":"fn"},{"from":"2jg5vn0/2jg5vn0","to":"main/out","as":"arg4"},{"from":"81ggj54","to":"nomp408","as":"r"},{"from":"nomp408","to":"ax6cc4l","as":"r"},{"from":"get","to":"object"},{"from":"set","to":"object"},{"from":"delete","to":"object"},{"from":"switch","to":"flow"},{"from":"if","to":"flow"},{"from":"h","to":"hyperapp"},{"from":"h_text","to":"hyperapp"},{"from":"toggle","to":"hyperapp"},{"from":"input","to":"hyperapp"},{"from":"new_array","to":"array"},{"from":"filter","to":"array"},{"from":"append","to":"array"},{"from":"map","to":"array"},{"from":"log","to":"utility"},{"from":"execute_graph","to":"utility"},{"from":"arg","to":"utility"},{"from":"partial","to":"utility"},{"from":"apply","to":"utility"},{"from":"fetch","to":"utility"},{"from":"stringify","to":"JSON"},{"from":"create_hydra","to":"hydra"},{"from":"noise","to":"hydra"},{"from":"voronoi","to":"hydra"},{"from":"osc","to":"hydra"},{"from":"shape","to":"hydra"},{"from":"gradient","to":"hydra"},{"from":"src","to":"hydra"},{"from":"solid","to":"hydra"},{"from":"rotate","to":"hydra"},{"from":"scale","to":"hydra"},{"from":"pixelate","to":"hydra"},{"from":"posterize","to":"hydra"},{"from":"shift","to":"hydra"},{"from":"repeat","to":"hydra"},{"from":"modulateRepeat","to":"hydra"},{"from":"repeatX","to":"hydra"},{"from":"modulateRepeatX","to":"hydra"},{"from":"repeatY","to":"hydra"},{"from":"modulateRepeatY","to":"hydra"},{"from":"kaleid","to":"hydra"},{"from":"modulateKaleid","to":"hydra"},{"from":"scroll","to":"hydra"},{"from":"scrollX","to":"hydra"},{"from":"modulateScrollX","to":"hydra"},{"from":"scrollY","to":"hydra"},{"from":"modulateScrollY","to":"hydra"},{"from":"add","to":"hydra"},{"from":"sub","to":"hydra"},{"from":"layer","to":"hydra"},{"from":"blend","to":"hydra"},{"from":"mult","to":"hydra"},{"from":"diff","to":"hydra"},{"from":"modulate","to":"hydra"},{"from":"modulateScale","to":"hydra"},{"from":"modulatePixelate","to":"hydra"},{"from":"modulateRotate","to":"hydra"},{"from":"modulateHue","to":"hydra"},{"from":"invert","to":"hydra"},{"from":"contrast","to":"hydra"},{"from":"brightness","to":"hydra"},{"from":"mask","to":"hydra"},{"from":"luma","to":"hydra"},{"from":"thresh","to":"hydra"},{"from":"color","to":"hydra"},{"from":"saturate","to":"hydra"},{"from":"hue","to":"hydra"},{"from":"colorama","to":"hydra"},{"from":"prev","to":"hydra"},{"from":"sum","to":"hydra"},{"from":"r","to":"hydra"},{"from":"g","to":"hydra"},{"from":"b","to":"hydra"},{"from":"a","to":"hydra"}]},
    {
        "in": "main/in",
        "out": "main/out",
        "id": "hyperapp_state",
        "nodes": [
            {
                "id": "main/out",
                "script": "console.log(\"state\")\nconsole.log(state);\nconsole.log(\"prev\")\nconsole.log(prev);\nreturn {state, display};"
            },
            {
                "id": "main/in"
            },
            {
                "id": "63tva08",
                "ref": "h",
                "name": "main display"
            },
            {
                "id": "l6vdvtn",
                "ref": "new_array",
                "name": "display elements"
            },
            {
                "id": "q23fegi",
                "value": "div"
            },
            {
                "id": "l6mvkla",
                "name": "props"
            },
            {
                "id": "o1wn5x1",
                "name": "class"
            },
            {
                "id": "zz730do",
                "value": "true"
            },
            {
                "id": "c2sko9c",
                "name": "hello world text",
                "out": "c2sko9c",
                "nodes": [
                    {
                        "id": "c2sko9c",
                        "ref": "h_text",
                        "name": "hello world text"
                    },
                    {
                        "id": "2lr3ihi",
                        "value": "Hello, world!"
                    }
                ],
                "edges": [
                    {
                        "from": "2lr3ihi",
                        "to": "c2sko9c",
                        "as": "text"
                    }
                ]
            },
            {
                "id": "ukbdszl",
                "ref": "h",
                "name": "display text"
            },
            {
                "id": "un5cq1q",
                "value": "div"
            },
            {
                "id": "0alhppw",
                "ref": "new_array",
                "name": "run count display"
            },
            {
                "id": "g82nw07",
                "ref": "h_text"
            },
            {
                "id": "pgygs2p/pgygs2p",
                "ref": "h",
                "name": "styles/out"
            },
            {
                "id": "pgygs2p/vdyskp6",
                "value": "style",
                "name": ""
            },
            {
                "id": "pgygs2p/1tf3vvf",
                "ref": "new_array",
                "name": "styles/1tf3vvf"
            },
            {
                "id": "pgygs2p/6yewnx1",
                "ref": "h_text",
                "name": "styles/6yewnx1"
            },
            {
                "id": "pgygs2p/02951w8",
                "value": ".result { position: absolute; bottom: 0; left: 0; font-size: 4em}\n.run-count { font-size: .5em; color: green}",
                "name": "css styles"
            },
            {
                "id": "tznmg79",
                "ref": "set",
                "name": "new state"
            },
            {
                "ref": "arg",
                "id": "lptd9k3",
                "value": "state"
            },
            {
                "id": "4ilqcxt",
                "value": "runcount"
            },
            {
                "ref": "arg",
                "id": "xev2phu",
                "value": "state"
            },
            {
                "ref": "arg",
                "id": "00ahbis",
                "value": "state.runcount"
            },
            {
                "id": "gbh28eu",
                "script": "return (isNaN(runcount) ? 0 : runcount) + 1",
                "name": "add 1"
            },
            {
                "ref": "arg",
                "id": "wegu4xm",
                "value": "state.runcount"
            },
            {
                "id": "wh4juqx",
                "ref": "h_text"
            },
            {
                "id": "edqfgkn",
                "value": "run count: "
            },
            {
                "id": "2t4s9uj",
                "name": "run count props"
            },
            {
                "id": "j630j9a",
                "value": "run-count"
            }
        ],
        "edges": [
            {
                "from": "main/in",
                "to": "main/out",
                "as": "args",
                "type": "ref"
            },
            {
                "from": "63tva08",
                "to": "main/out",
                "as": "display"
            },
            {
                "from": "l6vdvtn",
                "to": "63tva08",
                "as": "children"
            },
            {
                "from": "q23fegi",
                "to": "63tva08",
                "as": "dom_type"
            },
            {
                "from": "c2sko9c",
                "to": "l6vdvtn",
                "as": "arg1"
            },
            {
                "from": "pgygs2p/pgygs2p",
                "to": "l6vdvtn",
                "as": "arg0"
            },
            {
                "from": "l6mvkla",
                "to": "63tva08",
                "as": "props"
            },
            {
                "from": "o1wn5x1",
                "to": "l6mvkla",
                "as": "class"
            },
            {
                "from": "zz730do",
                "to": "o1wn5x1",
                "as": "result"
            },
            {
                "from": "ukbdszl",
                "to": "l6vdvtn",
                "as": "arg2"
            },
            {
                "from": "un5cq1q",
                "to": "ukbdszl",
                "as": "dom_type"
            },
            {
                "from": "0alhppw",
                "to": "ukbdszl",
                "as": "children"
            },
            {
                "from": "g82nw07",
                "to": "0alhppw",
                "as": "arg1"
            },
            {
                "from": "pgygs2p/vdyskp6",
                "to": "pgygs2p/pgygs2p",
                "as": "dom_type"
            },
            {
                "from": "pgygs2p/1tf3vvf",
                "to": "pgygs2p/pgygs2p",
                "as": "children"
            },
            {
                "from": "pgygs2p/6yewnx1",
                "to": "pgygs2p/1tf3vvf",
                "as": "arg0"
            },
            {
                "from": "pgygs2p/02951w8",
                "to": "pgygs2p/6yewnx1",
                "as": "text"
            },
            {
                "from": "tznmg79",
                "to": "main/out",
                "as": "state"
            },
            {
                "from": "lptd9k3",
                "to": "tznmg79",
                "as": "target"
            },
            {
                "from": "4ilqcxt",
                "to": "tznmg79",
                "as": "path"
            },
            {
                "from": "xev2phu",
                "to": "main/out",
                "as": "prev"
            },
            {
                "from": "00ahbis",
                "to": "g82nw07",
                "as": "text"
            },
            {
                "from": "gbh28eu",
                "to": "tznmg79",
                "as": "value"
            },
            {
                "from": "wegu4xm",
                "to": "gbh28eu",
                "as": "runcount"
            },
            {
                "from": "wh4juqx",
                "to": "0alhppw",
                "as": "arg0"
            },
            {
                "from": "edqfgkn",
                "to": "wh4juqx",
                "as": "text"
            },
            {
                "from": "2t4s9uj",
                "to": "ukbdszl",
                "as": "props"
            },
            {
                "from": "j630j9a",
                "to": "2t4s9uj",
                "as": "class"
            }
        ]
    },
    {
        "edges": [
            {
                "from": "main/in",
                "to": "main/out",
                "as": "args",
                "type": "ref"
            },
            {
                "from": "63tva08",
                "to": "main/out",
                "as": "display"
            },
            {
                "from": "l6vdvtn",
                "to": "63tva08",
                "as": "children"
            },
            {
                "from": "q23fegi",
                "to": "63tva08",
                "as": "dom_type"
            },
            {
                "from": "c2sko9c",
                "to": "l6vdvtn",
                "as": "arg1"
            },
            {
                "from": "pgygs2p/pgygs2p",
                "to": "l6vdvtn",
                "as": "arg0"
            },
            {
                "from": "l6mvkla",
                "to": "63tva08",
                "as": "props"
            },
            {
                "from": "o1wn5x1",
                "to": "l6mvkla",
                "as": "class"
            },
            {
                "from": "zz730do",
                "to": "o1wn5x1",
                "as": "result"
            },
            {
                "from": "pgygs2p/vdyskp6",
                "to": "pgygs2p/pgygs2p",
                "as": "dom_type"
            },
            {
                "from": "pgygs2p/1tf3vvf",
                "to": "pgygs2p/pgygs2p",
                "as": "children"
            },
            {
                "from": "pgygs2p/6yewnx1",
                "to": "pgygs2p/1tf3vvf",
                "as": "arg0"
            },
            {
                "from": "pgygs2p/02951w8",
                "to": "pgygs2p/6yewnx1",
                "as": "text"
            },
            {
                "from": "get",
                "to": "object"
            },
            {
                "from": "set",
                "to": "object"
            },
            {
                "from": "delete",
                "to": "object"
            },
            {
                "from": "switch",
                "to": "flow"
            },
            {
                "from": "if",
                "to": "flow"
            },
            {
                "from": "h",
                "to": "hyperapp"
            },
            {
                "from": "h_text",
                "to": "hyperapp"
            },
            {
                "from": "new_array",
                "to": "array"
            },
            {
                "from": "filter",
                "to": "array"
            },
            {
                "from": "log",
                "to": "utility"
            },
            {
                "from": "execute_graph",
                "to": "utility"
            },
            {
                "from": "arg",
                "to": "utility"
            },
            {
                "from": "partial",
                "to": "utility"
            },
            {
                "from": "apply",
                "to": "utility"
            },
            {
                "from": "fetch",
                "to": "utility"
            }
        ],
        "nodes": [
            {
                "id": "main/out",
                "args": [
                    "value"
                ]
            },
            {
                "id": "main/in"
            },
            {
                "id": "63tva08",
                "ref": "h",
                "name": "main display"
            },
            {
                "id": "l6vdvtn",
                "ref": "new_array",
                "name": "display elements"
            },
            {
                "id": "q23fegi",
                "value": "div"
            },
            {
                "id": "l6mvkla",
                "name": "props"
            },
            {
                "id": "o1wn5x1",
                "name": "class"
            },
            {
                "id": "zz730do",
                "value": "true"
            },
            {
                "id": "c2sko9c",
                "name": "hello world text",
                "out": "c2sko9c",
                "nodes": [
                    {
                        "id": "c2sko9c",
                        "ref": "h_text",
                        "name": "hello world text"
                    },
                    {
                        "id": "2lr3ihi",
                        "value": "Hello, world!"
                    }
                ],
                "edges": [
                    {
                        "from": "2lr3ihi",
                        "to": "c2sko9c",
                        "as": "text"
                    }
                ]
            },
            {
                "id": "pgygs2p/pgygs2p",
                "ref": "h",
                "name": "styles/out"
            },
            {
                "id": "pgygs2p/vdyskp6",
                "value": "style",
                "name": ""
            },
            {
                "id": "pgygs2p/1tf3vvf",
                "ref": "new_array",
                "name": "styles/1tf3vvf"
            },
            {
                "id": "pgygs2p/6yewnx1",
                "ref": "h_text",
                "name": "styles/6yewnx1"
            },
            {
                "id": "pgygs2p/02951w8",
                "value": ".result { position: absolute; bottom: 0; left: 0; font-size: 4em}\n.run-count { font-size: .5em; color: green}",
                "name": "css styles"
            },
            {
                "id": "array"
            },
            {
                "id": "utility"
            },
            {
                "id": "flow"
            },
            {
                "id": "hyperapp"
            },
            {
                "id": "object"
            },
            {
                "id": "log",
                "args": [
                    "value"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "value",
                        "ref": "arg",
                        "value": "value"
                    },
                    {
                        "id": "out",
                        "args": [],
                        "script": "console.log(_node.id); console.log(value); return value"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "input"
                    },
                    {
                        "from": "value",
                        "to": "out",
                        "as": "value"
                    }
                ]
            },
            {
                "id": "fetch",
                "name": "fetch",
                "extern": "utility.fetch"
            },
            {
                "id": "filter",
                "name": "filter",
                "in": "74n1jfm",
                "out": "lahq5z4",
                "nodes": [
                    {
                        "id": "lahq5z4",
                        "args": [],
                        "name": "filter/out",
                        "script": "const filter_fn = _lib.no.executeGraphNode({graph: _graph})(fn); return arr.filter(filter_fn)"
                    },
                    {
                        "id": "pfoypo5",
                        "args": [],
                        "ref": "arg",
                        "value": "key"
                    },
                    {
                        "id": "zinx621",
                        "args": [],
                        "ref": "arg",
                        "value": "value"
                    },
                    {
                        "id": "x2sz5kb",
                        "args": [],
                        "ref": "arg",
                        "value": "arr"
                    },
                    {
                        "id": "fn",
                        "ref": "arg",
                        "value": "fn"
                    },
                    {
                        "id": "74n1jfm",
                        "args": [],
                        "name": "filter/in"
                    }
                ],
                "edges": [
                    {
                        "from": "pfoypo5",
                        "to": "lahq5z4",
                        "as": "key"
                    },
                    {
                        "from": "zinx621",
                        "to": "lahq5z4",
                        "as": "value"
                    },
                    {
                        "from": "x2sz5kb",
                        "to": "lahq5z4",
                        "as": "arr"
                    },
                    {
                        "from": "74n1jfm",
                        "to": "lahq5z4",
                        "as": "input"
                    },
                    {
                        "from": "fn",
                        "to": "lahq5z4",
                        "as": "fn"
                    }
                ]
            },
            {
                "id": "switch",
                "args": [
                    "data",
                    "input"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "out",
                        "args": [
                            "data",
                            "input"
                        ],
                        "script": "return data[input];"
                    },
                    {
                        "id": "input",
                        "ref": "arg",
                        "value": "input"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "data"
                    },
                    {
                        "from": "input",
                        "to": "out",
                        "as": "input"
                    }
                ]
            },
            {
                "id": "if",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "pred",
                        "ref": "arg",
                        "value": "pred"
                    },
                    {
                        "id": "out",
                        "script": "return pred ? data['true'] : data['false']"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "data"
                    },
                    {
                        "from": "pred",
                        "to": "out",
                        "as": "pred"
                    }
                ]
            },
            {
                "id": "execute_graph",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "fn",
                        "ref": "arg",
                        "value": "fn"
                    },
                    {
                        "id": "graph",
                        "ref": "arg",
                        "value": "graph"
                    },
                    {
                        "id": "out",
                        "script": "return (...args) => {res = _lib.no.executeGraphNode({graph})(fn)(args.length === 1 ? args[0] : args); return res;}"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "args"
                    },
                    {
                        "from": "fn",
                        "to": "out",
                        "as": "fn"
                    },
                    {
                        "from": "graph",
                        "to": "out",
                        "as": "graph"
                    }
                ]
            },
            {
                "id": "apply",
                "script": "return _lib.no.executeGraphNode({graph: _graph})(fn)(args);"
            },
            {
                "id": "partial",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "input_value",
                        "ref": "arg",
                        "value": "_args"
                    },
                    {
                        "id": "fn",
                        "ref": "arg",
                        "value": "fn"
                    },
                    {
                        "id": "args",
                        "ref": "arg",
                        "value": "args"
                    },
                    {
                        "id": "out",
                        "script": "return _lib.no.executeGraphNode({graph: _graph})(fn)(Object.assign({}, _args, args))"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "args",
                        "type": "ref"
                    },
                    {
                        "from": "fn",
                        "to": "out",
                        "as": "fn"
                    },
                    {
                        "from": "args",
                        "to": "out",
                        "as": "args"
                    },
                    {
                        "from": "input_value",
                        "to": "out",
                        "as": "_args"
                    }
                ]
            },
            {
                "id": "new_array",
                "name": "new_array",
                "extern": "utility.new_array"
            },
            {
                "id": "get",
                "args": [
                    "target",
                    "path"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "def",
                        "ref": "arg",
                        "value": "def"
                    },
                    {
                        "id": "target",
                        "ref": "arg",
                        "value": "target"
                    },
                    {
                        "id": "path",
                        "ref": "arg",
                        "value": "path"
                    },
                    {
                        "id": "fill_default",
                        "args": [
                            "input"
                        ],
                        "script": "return input?.default ??  null"
                    },
                    {
                        "id": "get_args",
                        "ref": "new_array"
                    },
                    {
                        "id": "out",
                        "extern": "just.get"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "input"
                    },
                    {
                        "from": "def",
                        "to": "out",
                        "as": "def"
                    },
                    {
                        "from": "path",
                        "to": "out",
                        "as": "path"
                    },
                    {
                        "from": "target",
                        "to": "out",
                        "as": "target"
                    },
                    {
                        "from": "get_args",
                        "to": "_out",
                        "as": "args"
                    }
                ]
            },
            {
                "id": "arg",
                "args": [
                    "node_inputs"
                ],
                "extern": "utility.arg"
            },
            {
                "id": "set",
                "type": "(target: any, value: any, path: string) => any",
                "script": "const keys = path.split('.'); const check = (o, v, k) => k.length === 1 ? {...o, [k[0]]: v, _needsresolve: true} : o.hasOwnProperty(k[0]) ? {...o, [k[0]]: check(o[k[0]], v, k.slice(1)), _needsresolve: true} : o; return check(target, value, keys)"
            },
            {
                "id": "delete",
                "out": "out",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "target",
                        "ref": "arg",
                        "value": "target"
                    },
                    {
                        "id": "path",
                        "ref": "arg",
                        "value": "path"
                    },
                    {
                        "id": "out",
                        "script": "const new_val = Object.assign({}, target); delete target[path]; return new_val"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "args"
                    },
                    {
                        "from": "target",
                        "to": "out",
                        "as": "target"
                    },
                    {
                        "from": "path",
                        "to": "out",
                        "as": "path"
                    }
                ]
            },
            {
                "id": "h",
                "args": [
                    "children",
                    "props",
                    "dom_type"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "fill_children",
                        "args": [
                            "children"
                        ],
                        "script": "return children === undefined ? [] : children.length !== undefined ? children.filter(c => !!c).map(c => c.el ?? c) : [children.el ?? children]"
                    },
                    {
                        "id": "fill_props",
                        "args": [
                            "input"
                        ],
                        "script": "return input.props ?? {}"
                    },
                    {
                        "id": "dom_type",
                        "ref": "arg",
                        "value": "dom_type"
                    },
                    {
                        "id": "out",
                        "script": "(children ?? []).forEach(c => {if(!((c.hasOwnProperty('dom_type') && c.hasOwnProperty('props')) || c.hasOwnProperty('text'))){throw new Error('invalid child element');}}); return {el: {dom_type, props, children}}"
                    },
                    {
                        "id": "_out"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "fill_children"
                    },
                    {
                        "from": "in",
                        "to": "dom_type"
                    },
                    {
                        "from": "in",
                        "to": "fill_props",
                        "as": "input"
                    },
                    {
                        "from": "fill_children",
                        "to": "out",
                        "as": "children",
                        "order": 1
                    },
                    {
                        "from": "fill_props",
                        "to": "out",
                        "as": "props",
                        "type": "resolve"
                    },
                    {
                        "from": "dom_type",
                        "to": "out",
                        "as": "dom_type"
                    }
                ]
            },
            {
                "id": "h_text",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "text",
                        "ref": "arg",
                        "value": "text"
                    },
                    {
                        "id": "dom_type",
                        "value": "text_value"
                    },
                    {
                        "id": "el"
                    },
                    {
                        "id": "out",
                        "args": [
                            "text"
                        ]
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "input"
                    },
                    {
                        "from": "dom_type",
                        "to": "el",
                        "as": "dom_type"
                    },
                    {
                        "from": "text",
                        "to": "el",
                        "as": "text"
                    },
                    {
                        "from": "el",
                        "to": "out",
                        "as": "el",
                        "type": "resolve"
                    }
                ]
            }
        ],
        "id": "simple_html_hyperapp",
        "out": "main/out",
        "in": "main/in"
    },
    {
        "in": "main/in",
        "out": "main/out",
        "id": "promises",
        "nodes": [
            {
                "id": "main/out",
                "args": [
                    "value"
                ]
            },
            {
                "id": "main/in"
            },
            {
                "id": "63tva08",
                "ref": "h",
                "name": "main display"
            },
            {
                "id": "q23fegi",
                "value": "div"
            },
            {
                "id": "l6mvkla",
                "name": "props"
            },
            {
                "id": "o1wn5x1",
                "name": "class"
            },
            {
                "id": "zz730do",
                "value": "true"
            },
            {
                "ref": "arg",
                "id": "xev2phu",
                "value": "state"
            },
            {
                "id": "el0app0",
                "name": "state"
            },
            {
                "id": "2gcjbds",
                "ref": "get"
            },
            {
                "id": "f6js4lo",
                "script": "return res.then(r => r.json())"
            },
            {
                "id": "91dm5vd",
                "value": "data.0.content"
            },
            {
                "id": "m9yeyqc",
                "ref": "fetch"
            },
            {
                "id": "fphsciu",
                "value": "https://fakerapi.it/api/v1/texts"
            },
            {
                "id": "0iscsvl",
                "ref": "switch",
                "name": "fetch if needed"
            },
            {
                "id": "gcg2ctk",
                "script": "return runcount === undefined ? 'fetch' : 'state'"
            },
            {
                "ref": "arg",
                "id": "sgnxbrn",
                "value": "state.runcount"
            },
            {
                "ref": "arg",
                "id": "b77sv21",
                "value": "state.runcount"
            },
            {
                "id": "array"
            },
            {
                "id": "utility"
            },
            {
                "id": "flow"
            },
            {
                "id": "hyperapp"
            },
            {
                "id": "object"
            },
            {
                "id": "log",
                "args": [
                    "value"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "value",
                        "ref": "arg",
                        "value": "value"
                    },
                    {
                        "id": "out",
                        "args": [],
                        "script": "console.log(_node.id); console.log(value); return value"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "input"
                    },
                    {
                        "from": "value",
                        "to": "out",
                        "as": "value"
                    }
                ]
            },
            {
                "id": "fetch",
                "name": "fetch",
                "extern": "utility.fetch"
            },
            {
                "id": "filter",
                "name": "filter",
                "in": "74n1jfm",
                "out": "lahq5z4",
                "nodes": [
                    {
                        "id": "lahq5z4",
                        "args": [],
                        "name": "filter/out",
                        "script": "const filter_fn = _lib.no.executeGraphNode({graph: _graph})(fn); return arr.filter(filter_fn)"
                    },
                    {
                        "id": "pfoypo5",
                        "args": [],
                        "ref": "arg",
                        "value": "key"
                    },
                    {
                        "id": "zinx621",
                        "args": [],
                        "ref": "arg",
                        "value": "value"
                    },
                    {
                        "id": "x2sz5kb",
                        "args": [],
                        "ref": "arg",
                        "value": "arr"
                    },
                    {
                        "id": "fn",
                        "ref": "arg",
                        "value": "fn"
                    },
                    {
                        "id": "74n1jfm",
                        "args": [],
                        "name": "filter/in"
                    }
                ],
                "edges": [
                    {
                        "from": "pfoypo5",
                        "to": "lahq5z4",
                        "as": "key"
                    },
                    {
                        "from": "zinx621",
                        "to": "lahq5z4",
                        "as": "value"
                    },
                    {
                        "from": "x2sz5kb",
                        "to": "lahq5z4",
                        "as": "arr"
                    },
                    {
                        "from": "74n1jfm",
                        "to": "lahq5z4",
                        "as": "input"
                    },
                    {
                        "from": "fn",
                        "to": "lahq5z4",
                        "as": "fn"
                    }
                ]
            },
            {
                "id": "switch",
                "args": [
                    "data",
                    "input"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "out",
                        "args": [
                            "data",
                            "input"
                        ],
                        "script": "return data[input];"
                    },
                    {
                        "id": "input",
                        "ref": "arg",
                        "value": "input"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "data"
                    },
                    {
                        "from": "input",
                        "to": "out",
                        "as": "input"
                    }
                ]
            },
            {
                "id": "if",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "pred",
                        "ref": "arg",
                        "value": "pred"
                    },
                    {
                        "id": "out",
                        "script": "return pred ? data['true'] : data['false']"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "data"
                    },
                    {
                        "from": "pred",
                        "to": "out",
                        "as": "pred"
                    }
                ]
            },
            {
                "id": "execute_graph",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "fn",
                        "ref": "arg",
                        "value": "fn"
                    },
                    {
                        "id": "graph",
                        "ref": "arg",
                        "value": "graph"
                    },
                    {
                        "id": "out",
                        "script": "return (...args) => {res = _lib.no.executeGraphNode({graph})(fn)(args.length === 1 ? args[0] : args); return res;}"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "args"
                    },
                    {
                        "from": "fn",
                        "to": "out",
                        "as": "fn"
                    },
                    {
                        "from": "graph",
                        "to": "out",
                        "as": "graph"
                    }
                ]
            },
            {
                "id": "apply",
                "script": "return _lib.no.executeGraphNode({graph: _graph})(fn)(args);"
            },
            {
                "id": "partial",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "input_value",
                        "ref": "arg",
                        "value": "_args"
                    },
                    {
                        "id": "fn",
                        "ref": "arg",
                        "value": "fn"
                    },
                    {
                        "id": "args",
                        "ref": "arg",
                        "value": "args"
                    },
                    {
                        "id": "out",
                        "script": "return _lib.no.executeGraphNode({graph: _graph})(fn)(Object.assign({}, _args, args))"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "args",
                        "type": "ref"
                    },
                    {
                        "from": "fn",
                        "to": "out",
                        "as": "fn"
                    },
                    {
                        "from": "args",
                        "to": "out",
                        "as": "args"
                    },
                    {
                        "from": "input_value",
                        "to": "out",
                        "as": "_args"
                    }
                ]
            },
            {
                "id": "new_array",
                "name": "new_array",
                "extern": "utility.new_array"
            },
            {
                "id": "get",
                "args": [
                    "target",
                    "path"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "def",
                        "ref": "arg",
                        "value": "def"
                    },
                    {
                        "id": "target",
                        "ref": "arg",
                        "value": "target"
                    },
                    {
                        "id": "path",
                        "ref": "arg",
                        "value": "path"
                    },
                    {
                        "id": "fill_default",
                        "args": [
                            "input"
                        ],
                        "script": "return input?.default ??  null"
                    },
                    {
                        "id": "get_args",
                        "ref": "new_array"
                    },
                    {
                        "id": "out",
                        "extern": "just.get"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "input"
                    },
                    {
                        "from": "def",
                        "to": "out",
                        "as": "def"
                    },
                    {
                        "from": "path",
                        "to": "out",
                        "as": "path"
                    },
                    {
                        "from": "target",
                        "to": "out",
                        "as": "target"
                    },
                    {
                        "from": "get_args",
                        "to": "_out",
                        "as": "args"
                    }
                ]
            },
            {
                "id": "arg",
                "args": [
                    "node_inputs"
                ],
                "extern": "utility.arg"
            },
            {
                "id": "set",
                "type": "(target: any, value: any, path: string) => any",
                "script": "const keys = path.split('.'); const check = (o, v, k) => k.length === 1 ? {...o, [k[0]]: v, _needsresolve: true} : o.hasOwnProperty(k[0]) ? {...o, [k[0]]: check(o[k[0]], v, k.slice(1)), _needsresolve: true} : o; return check(target, value, keys)"
            },
            {
                "id": "delete",
                "out": "out",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "target",
                        "ref": "arg",
                        "value": "target"
                    },
                    {
                        "id": "path",
                        "ref": "arg",
                        "value": "path"
                    },
                    {
                        "id": "out",
                        "script": "const new_val = Object.assign({}, target); delete target[path]; return new_val"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "args"
                    },
                    {
                        "from": "target",
                        "to": "out",
                        "as": "target"
                    },
                    {
                        "from": "path",
                        "to": "out",
                        "as": "path"
                    }
                ]
            },
            {
                "id": "h",
                "args": [
                    "children",
                    "props",
                    "dom_type"
                ],
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "fill_children",
                        "args": [
                            "children"
                        ],
                        "script": "return children === undefined ? [] : children.length !== undefined ? children.filter(c => !!c).map(c => c.el ?? c) : [children.el ?? children]"
                    },
                    {
                        "id": "fill_props",
                        "args": [
                            "input"
                        ],
                        "script": "return input.props ?? {}"
                    },
                    {
                        "id": "dom_type",
                        "ref": "arg",
                        "value": "dom_type"
                    },
                    {
                        "id": "out",
                        "script": "(children ?? []).forEach(c => {if(!((c.hasOwnProperty('dom_type') && c.hasOwnProperty('props')) || c.hasOwnProperty('text'))){throw new Error('invalid child element');}}); return {el: {dom_type, props, children}}"
                    },
                    {
                        "id": "_out"
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "fill_children"
                    },
                    {
                        "from": "in",
                        "to": "dom_type"
                    },
                    {
                        "from": "in",
                        "to": "fill_props",
                        "as": "input"
                    },
                    {
                        "from": "fill_children",
                        "to": "out",
                        "as": "children",
                        "order": 1
                    },
                    {
                        "from": "fill_props",
                        "to": "out",
                        "as": "props",
                        "type": "resolve"
                    },
                    {
                        "from": "dom_type",
                        "to": "out",
                        "as": "dom_type"
                    }
                ]
            },
            {
                "id": "h_text",
                "nodes": [
                    {
                        "id": "in"
                    },
                    {
                        "id": "text",
                        "ref": "arg",
                        "value": "text"
                    },
                    {
                        "id": "dom_type",
                        "value": "text_value"
                    },
                    {
                        "id": "el"
                    },
                    {
                        "id": "out",
                        "args": [
                            "text"
                        ]
                    }
                ],
                "edges": [
                    {
                        "from": "in",
                        "to": "out",
                        "as": "input"
                    },
                    {
                        "from": "dom_type",
                        "to": "el",
                        "as": "dom_type"
                    },
                    {
                        "from": "text",
                        "to": "el",
                        "as": "text"
                    },
                    {
                        "from": "el",
                        "to": "out",
                        "as": "el",
                        "type": "resolve"
                    }
                ]
            },
            {
                "id": "l6vdvtn",
                "name": "display elements",
                "out": "l6vdvtn",
                "nodes": [
                    {
                        "id": "l6vdvtn",
                        "ref": "new_array",
                        "name": "display elements"
                    },
                    {
                        "id": "c2sko9c",
                        "name": "hello world text",
                        "out": "c2sko9c",
                        "nodes": [
                            {
                                "id": "c2sko9c",
                                "ref": "h_text",
                                "name": "hello world text"
                            },
                            {
                                "id": "2lr3ihi",
                                "value": "Hello, world!"
                            }
                        ],
                        "edges": [
                            {
                                "from": "2lr3ihi",
                                "to": "c2sko9c",
                                "as": "text"
                            }
                        ]
                    },
                    {
                        "id": "pgygs2p/pgygs2p",
                        "ref": "h",
                        "name": "styles/out"
                    },
                    {
                        "id": "ukbdszl",
                        "ref": "h",
                        "name": "display text"
                    },
                    {
                        "id": "pgygs2p/vdyskp6",
                        "value": "style",
                        "name": ""
                    },
                    {
                        "id": "pgygs2p/1tf3vvf",
                        "ref": "new_array",
                        "name": "styles/1tf3vvf"
                    },
                    {
                        "id": "un5cq1q",
                        "value": "div"
                    },
                    {
                        "id": "0alhppw",
                        "ref": "new_array",
                        "name": "run count display"
                    },
                    {
                        "id": "2t4s9uj",
                        "name": "run count props"
                    },
                    {
                        "id": "pgygs2p/6yewnx1",
                        "ref": "h_text",
                        "name": "styles/6yewnx1"
                    },
                    {
                        "id": "g82nw07",
                        "ref": "h_text"
                    },
                    {
                        "id": "wh4juqx",
                        "ref": "h_text"
                    },
                    {
                        "id": "j630j9a",
                        "value": "run-count"
                    },
                    {
                        "id": "pgygs2p/02951w8",
                        "value": ".result { position: absolute; bottom: 0; left: 0; font-size: 4em}\n.run-count { font-size: .5em; color: green}",
                        "name": "css styles"
                    },
                    {
                        "id": "gzr41q3",
                        "ref": "log"
                    },
                    {
                        "id": "edqfgkn",
                        "value": "run count: "
                    },
                    {
                        "ref": "arg",
                        "id": "00ahbis",
                        "value": "state.runcount"
                    }
                ],
                "edges": [
                    {
                        "from": "c2sko9c",
                        "to": "l6vdvtn",
                        "as": "arg1"
                    },
                    {
                        "from": "pgygs2p/pgygs2p",
                        "to": "l6vdvtn",
                        "as": "arg0"
                    },
                    {
                        "from": "ukbdszl",
                        "to": "l6vdvtn",
                        "as": "arg2"
                    },
                    {
                        "from": "pgygs2p/vdyskp6",
                        "to": "pgygs2p/pgygs2p",
                        "as": "dom_type"
                    },
                    {
                        "from": "pgygs2p/1tf3vvf",
                        "to": "pgygs2p/pgygs2p",
                        "as": "children"
                    },
                    {
                        "from": "un5cq1q",
                        "to": "ukbdszl",
                        "as": "dom_type"
                    },
                    {
                        "from": "0alhppw",
                        "to": "ukbdszl",
                        "as": "children"
                    },
                    {
                        "from": "2t4s9uj",
                        "to": "ukbdszl",
                        "as": "props"
                    },
                    {
                        "from": "pgygs2p/6yewnx1",
                        "to": "pgygs2p/1tf3vvf",
                        "as": "arg0"
                    },
                    {
                        "from": "g82nw07",
                        "to": "0alhppw",
                        "as": "arg1"
                    },
                    {
                        "from": "wh4juqx",
                        "to": "0alhppw",
                        "as": "arg0"
                    },
                    {
                        "from": "j630j9a",
                        "to": "2t4s9uj",
                        "as": "class"
                    },
                    {
                        "from": "pgygs2p/02951w8",
                        "to": "pgygs2p/6yewnx1",
                        "as": "text"
                    },
                    {
                        "from": "gzr41q3",
                        "to": "g82nw07",
                        "as": "text"
                    },
                    {
                        "from": "edqfgkn",
                        "to": "wh4juqx",
                        "as": "text"
                    },
                    {
                        "from": "00ahbis",
                        "to": "gzr41q3",
                        "as": "value"
                    }
                ]
            }
        ],
        "edges": [
            {
                "from": "main/in",
                "to": "main/out",
                "as": "args",
                "type": "ref"
            },
            {
                "from": "63tva08",
                "to": "main/out",
                "as": "display"
            },
            {
                "from": "l6vdvtn",
                "to": "63tva08",
                "as": "children"
            },
            {
                "from": "q23fegi",
                "to": "63tva08",
                "as": "dom_type"
            },
            {
                "from": "l6mvkla",
                "to": "63tva08",
                "as": "props"
            },
            {
                "from": "o1wn5x1",
                "to": "l6mvkla",
                "as": "class"
            },
            {
                "from": "zz730do",
                "to": "o1wn5x1",
                "as": "result"
            },
            {
                "from": "xev2phu",
                "to": "main/out",
                "as": "prev"
            },
            {
                "from": "el0app0",
                "to": "main/out",
                "as": "state"
            },
            {
                "from": "91dm5vd",
                "to": "2gcjbds",
                "as": "path"
            },
            {
                "from": "m9yeyqc",
                "to": "f6js4lo",
                "as": "res"
            },
            {
                "from": "fphsciu",
                "to": "m9yeyqc",
                "as": "url"
            },
            {
                "from": "f6js4lo",
                "to": "2gcjbds",
                "as": "target"
            },
            {
                "from": "2gcjbds",
                "to": "0iscsvl",
                "as": "fetch"
            },
            {
                "from": "0iscsvl",
                "to": "el0app0",
                "as": "runcount"
            },
            {
                "from": "gcg2ctk",
                "to": "0iscsvl",
                "as": "input"
            },
            {
                "from": "sgnxbrn",
                "to": "gcg2ctk",
                "as": "runcount"
            },
            {
                "from": "b77sv21",
                "to": "0iscsvl",
                "as": "state"
            },
            {
                "from": "get",
                "to": "object"
            },
            {
                "from": "set",
                "to": "object"
            },
            {
                "from": "delete",
                "to": "object"
            },
            {
                "from": "switch",
                "to": "flow"
            },
            {
                "from": "if",
                "to": "flow"
            },
            {
                "from": "h",
                "to": "hyperapp"
            },
            {
                "from": "h_text",
                "to": "hyperapp"
            },
            {
                "from": "new_array",
                "to": "array"
            },
            {
                "from": "filter",
                "to": "array"
            },
            {
                "from": "log",
                "to": "utility"
            },
            {
                "from": "execute_graph",
                "to": "utility"
            },
            {
                "from": "arg",
                "to": "utility"
            },
            {
                "from": "partial",
                "to": "utility"
            },
            {
                "from": "apply",
                "to": "utility"
            },
            {
                "from": "fetch",
                "to": "utility"
            }
        ]
    }
]